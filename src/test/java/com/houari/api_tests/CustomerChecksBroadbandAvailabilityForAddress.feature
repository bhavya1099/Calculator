# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=dc03be64e0
# ROOST_METHOD_SIG_HASH=3c477b173d
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Customer checks broadband availability for an address',
#     steps: 'Given "John Doe" has a subscriber ID "SVTL001"\n' +
#       'And he wants to check broadband availability for address "14393"\n' +
#       'When John sends a request to check availability\n' +
#       'Then the system should validate the address\n' +
#       'And fetch the broadband availability\n' +
#       'And return a list of available broadband packages',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Check broadband service availability and selection

  Background:
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_URL = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_URL'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_URL', 'http://localhost:4010')
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN', 'Bearer_Dummy_Token')

  Scenario: Customer checks broadband availability for an address with valid payload
    * url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL
    And path '/availabilityCheck'
    And header Authorization = RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN
    And def payload = { "customer": "John Doe","address":"14393" }
    And request payload
    When method post
    Then status 200
    And def response200 = response
    And match response200 == {control: '#object', 'control.type':'#string', 'control.message':'#string', 'control.code':'#string'}

  Scenario: Customer checks broadband availability for an address with invalid payload
    * url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL
    And path '/availabilityCheck'
    And header Authorization = RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN
    And request {}
    When method post
    Then status 400

  Scenario: Customer checks broadband availability for an address with unauthorized access
    Given def RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN = 'Invalid_Token'
    And url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL
    And path '/availabilityCheck'
    And header Authorization = RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN
    And request payload
    When method post
    Then status 401

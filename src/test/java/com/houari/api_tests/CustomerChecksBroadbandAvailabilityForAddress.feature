# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=dc03be64e0
# ROOST_METHOD_SIG_HASH=3c477b173d
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Customer checks broadband availability for an address',
#     steps: 'Given "John Doe" has a subscriber ID "SVTL001"\n' +
#       'And he wants to check broadband availability for address "14393"\n' +
#       'When John sends a request to check availability\n' +
#       'Then the system should validate the address\n' +
#       'And fetch the broadband availability\n' +
#       'And return a list of available broadband packages',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Check broadband service availability and selection

Background:
    * def resourcePoolManagement_URL = karate.properties['RESOURCEPOOLMANAGEMENT_URL'] || karate.get('RESOURCEPOOLMANAGEMENT_URL', 'http://localhost:4010')
    * url resourcePoolManagement_URL

Scenario: Customer checks broadband availability for an address    
    Given path '/availabilityCheck'
    And request 
    """
    { 
      "customer": "SVTL001", 
      "address": "14393" 
      } 
    """
    When method post
    Then status 200
    And assert response.control == 'S'
    And match response contains { "message": '#string', "code": '#string' }

Scenario Outline: Validate unsuccessful request responses 
    Given path '/availabilityCheck'
    And request 
    """ 
    { 
      "customer": "invalid", 
      "address": "invalid" 
    } 
    """
    When method post
    Then status <statusCode>
    And match response contains { "type":'#string', "message":'#string', "code":'#string' }

    Examples:
        | statusCode |
        | 400        |
        | 401        |
        | 403        |
        | 404        |
        | 429        |
        | 500        |
        | 503        |
        | 504        |

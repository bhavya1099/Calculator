# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=7f27d0f027
# ROOST_METHOD_SIG_HASH=d5853d6df0
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Verify specific date data in time series',
#     steps: 'Given I have retrieved the daily time series data for AAPL stock\n' +
#       'When I check the data for "2024-07-09"\n' +
#       'Then it should have the following values:\n' +
#       '      | Field     | Value     |\n' +
#       '      | 1. open   | 227.9300  |\n' +
#       '      | 2. high   | 229.4000  |\n' +
#       '      | 3. low    | 226.3721  |\n' +
#       '      | 4. close  | 228.6800  |\n' +
#       '      | 5. volume | 48169822  |',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Test API from Alphavantage.co

Background:
  * def alphavantage_get_resolved_URL = karate.properties['ALPHAVANTAGE_GET_RESOLVED_URL'] || karate.get('ALPHAVANTAGE_GET_RESOLVED_URL', 'http://localhost:4010')
  * url alphavantage_get_resolved_URL

Scenario Outline: Verify specific date data in time series
  Given path '/query'
  And param symbol = 'AAPL'
  And param apikey = '<given_api_key>'
  And param function = 'TIME_SERIES_DAILY'
  When method GET
  Then status 200
  * def responseStored = response
  * match response['Time Series (Daily)']['<date>'] contains { '1. open': '#notnull', '2. high': '#notnull', '3. low': '#notnull', '4. close': '#notnull', '5. volume': '#notnull' }
  * match response['Time Series (Daily)']['<date>'] == { '1. open': '<open>', '2. high': '<high>', '3. low': '<low>', '4. close': '<close>', '5. volume': '<volume>' }

 Examples:
  | given_api_key  | date       | open      | high      | low       | close     | volume   |
  | <replaced_key> | 2024-07-09 | 227.9300  | 229.4000  | 226.3721  | 228.6800  | 48169822 |

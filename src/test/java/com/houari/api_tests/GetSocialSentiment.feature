# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=8891f7df5d
# ROOST_METHOD_SIG_HASH=ea14a43624
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Get Social Sentiment',
#     steps: 'Given the Finnhub API base URL is "https://finnhub.io/api/v1"\n' +
#       'When I send a GET request to "/stock/social-sentiment?symbol=AAPL"\n' +
#       'Then the response status code should be 200\n' +
#       'And the response should contain social sentiment data',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Test API from Alphavantage.co

Background:
  * def finnhub_URL = karate.properties['FINNHUB_URL'] || 'https://finnhub.io/api/v1'
  * def finnhub_AUTH_TOKEN = karate.properties['FINNHUB_AUTH_TOKEN'] || 'http://localhost:4010'
  * url finnhub_URL

Scenario: Get Social Sentiment
  # Setup the authentication and API endpoint
  Given path '/stock/social-sentiment'
  And param symbol = 'AAPL'
  And param token = finnhub_AUTH_TOKEN
  
  # Send a GET request
  When method GET

  # Asserting the status code response
  Then status 200

  # Asserting the response body
  And match response.symbol == 'AAPL'
  And match response.data[*] contains { mention: '#(^\\d+$)#', positiveMention: '#(^\\d+$)#', negativeMention: '#(^\\d+$)#', positiveScore: '#(^\\d+(\\.\\d+)?$)#', negativeScore: '#(^\\d+(\\.\\d+)?$)#', score: '#(^\\d+(\\.\\d+)?$)#', atTime: '#notnull' }

# ********RoostGPT********

# Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=5fa26a145f
# ROOST_METHOD_SIG_HASH=c420c35532
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Retrieve data with a different function',
#     steps: 'Given the API endpoint is "https://www.alphavantage.co/query"\n' +
#       'And I have a valid API key\n' +
#       'When I send a GET request with the following parameters:\n' +
#       '      | Parameter | Value        |\n' +
#       '      | function  | <function>   |\n' +
#       '      | symbol    | IBM          |\n' +
#       '      | apikey    | demo         |\n' +
#       'Then the response status code should be 200',
#     examples: 'Examples:\n' +
#       '      | function           |\n' +
#       '      | TIME_SERIES_WEEKLY |\n' +
#       '      | TIME_SERIES_MONTHLY|'
#   }
# }
# 

# ********RoostGPT********
Feature: Test API from Alphavantage.co

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Retrieve data with different time series functions
    Given path '/query'
    And param function = '<function>'
    And param symbol = 'IBM'
    And param apikey = 'demo'
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'][0] == 'application/json'
    And match response contains { 'Meta Data': '#object', '<function>': '#object' }
    And match response['Meta Data']['2. Symbol'] == 'IBM'
    And match response['Meta Data']['1. Information'] contains '<function>'

    Examples:
      | function            |
      | TIME_SERIES_WEEKLY  |
      | TIME_SERIES_MONTHLY |

  Scenario: Retrieve data with invalid API key
    Given path '/query'
    And param function = 'TIME_SERIES_DAILY_ADJUSTED'
    And param symbol = 'IBM'
    And param apikey = 'invalid_key'
    When method GET
    Then status 401
    And match response.error == 'Invalid API key'

  Scenario: Retrieve data with missing required parameter
    Given path '/query'
    And param symbol = 'IBM'
    And param apikey = 'demo'
    When method GET
    Then status 400
    And match response.error == 'Missing required parameter: function'

  Scenario: Retrieve data with invalid symbol
    Given path '/query'
    And param function = 'TIME_SERIES_DAILY_ADJUSTED'
    And param symbol = 'INVALID'
    And param apikey = 'demo'
    When method GET
    Then status 200
    And match response contains { 'Error Message': '#string' }
    And match response['Error Message'] contains 'Invalid API call'

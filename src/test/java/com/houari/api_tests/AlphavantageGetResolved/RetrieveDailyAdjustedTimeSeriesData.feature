# ********RoostGPT********

# Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=2170301228
# ROOST_METHOD_SIG_HASH=704171caf6
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Retrieve daily adjusted time series data',
#     steps: 'Given the API endpoint is "https://www.alphavantage.co/query"\n' +
#       'And I have a valid API key\n' +
#       'When I send a GET request with the following parameters:\n' +
#       '      | Parameter | Value                     |\n' +
#       '      | function  | TIME_SERIES_DAILY_ADJUSTED |\n' +
#       '      | symbol    | IBM                       |\n' +
#       '      | apikey    | demo                      |\n' +
#       'Then the response status code should be 200',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Test API from Alphavantage.co

  Scenario: Retrieve daily adjusted time series data
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    Given path '/query'
    And param function = 'TIME_SERIES_DAILY_ADJUSTED'
    And param symbol = 'IBM'
    And param apikey = 'demo'
    When method GET
    Then status 200
    And match response == '#object'
    And match response['Meta Data'] == '#present'
    And match response['Time Series (Daily)'] == '#present'
    And match response['Meta Data']['1. Information'] == '#string'
    And match response['Meta Data']['2. Symbol'] == 'IBM'
    And match response['Meta Data']['3. Last Refreshed'] == '#string'
    And match response['Meta Data']['4. Output Size'] == '#string'
    And match response['Meta Data']['5. Time Zone'] == '#string'
    * def firstDate = Object.keys(response['Time Series (Daily)'])[0]
    * def dailyData = response['Time Series (Daily)'][firstDate]
    And match dailyData['1. open'] == '#string'
    And match dailyData['2. high'] == '#string'
    And match dailyData['3. low'] == '#string'
    And match dailyData['4. close'] == '#string'
    And match dailyData['5. adjusted close'] == '#string'
    And match dailyData['6. volume'] == '#string'
    And match dailyData['7. dividend amount'] == '#string'
    And match dailyData['8. split coefficient'] == '#string'

  Scenario: Retrieve daily adjusted time series data with invalid API key
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    Given path '/query'
    And param function = 'TIME_SERIES_DAILY_ADJUSTED'
    And param symbol = 'IBM'
    And param apikey = 'invalid_key'
    When method GET
    Then status 401
    And match response == '#object'
    And match response.error == '#present'
    And match response.error == 'Invalid API key. Please retry or visit https://www.alphavantage.co/support/ for support.'

  Scenario: Retrieve daily adjusted time series data with missing parameters
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    Given path '/query'
    And param apikey = 'demo'
    When method GET
    Then status 400
    And match response == '#object'
    And match response.error == '#present'
    And match response.error == 'Missing required parameters. Please refer to the documentation for required parameters.'

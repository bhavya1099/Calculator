# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics_get for http method type GET 
# RoostTestHash=5a89adf6e3
# 
# 

# ********RoostGPT********
Feature: List Topics in Kafka Cluster

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: GET request to list all topics in a Kafka cluster
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    And match response == <expected_response>

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_get.csv') |

  Scenario Outline: GET request to list topics with an invalid cluster ID
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 400
    And match response == <expected_response>

    Examples:
      | cluster_id   | expected_response                                                                 |
      | 'invalid-id' | """{ 'id': '#string', 'status': '400', 'code': '#string', 'title': '#string' }""" |

  Scenario Outline: Unauthorized access to topics list
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics'
    And header Authorization = 'Bearer invalid_token'
    When method get
    Then status 401
    And match response == <expected_response>

    Examples:
      | cluster_id  | expected_response                                                                               |
      | 'cluster-1' | """{ 'id': '#string', 'status': '401', 'code': '#string', 'title': 'Authentication failed' }""" |

  Scenario Outline: Forbidden access to topics list due to insufficient permissions
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 403
    And match response == <expected_response>

    Examples:
      | cluster_id  | expected_response                                                                                   |
      | 'cluster-1' | """{ 'id': '#string', 'status': '403', 'code': '#string', 'title': 'Request is not authorized' }""" |

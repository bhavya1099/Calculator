# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/partitions_get for http method type GET 
# RoostTestHash=4ee5afee1b
# 
# 

# ********RoostGPT********
Feature: List Kafka Partitions

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get list of partitions for a topic with valid cluster and topic names
    Given path 'kafka/v3/clusters', <cluster_id>, 'topics', <topic_name>, 'partitions'
    And header Authorization = 'Bearer ' + authToken
    When method get
    Then status 200
    And match response == '#object'
    And match response.data[*].cluster_id == '#string'
    And match response.data[*].topic_name == '#string'
    And match response.data[*].partition_id == '#number'
    And match each response.data[*].leader.related == '#string'
    And match each response.data[*].replicas.related == '#string'
    And match each response.data[*].reassignment.related == '#string'

    Examples:
      | cluster_id  | topic_name |
      | 'cluster-1' | 'topic-1'  |
      | 'cluster-2' | 'topic-2'  |

  Scenario: Get list of partitions for a non-existing topic
    Given path 'kafka/v3/clusters', 'non-existing-cluster', 'topics', 'unknown-topic', 'partitions'
    And header Authorization = 'Bearer ' + authToken
    When method get
    Then status 404
    And match response.status == '404'
    And match response.code == '40403'
    And match response.message == 'This server does not host this topic-partition.'

  Scenario: Get list of partitions without authorization
    Given path 'kafka/v3/clusters', 'cluster-1', 'topics', 'topic-1', 'partitions'
    When method get
    Then status 401
    And match response.status == '401'
    And match response.code == '40101'
    And match response.message == 'Authentication failed'

  Scenario: Get list of partitions with exceeded rate limits
    Given path 'kafka/v3/clusters', 'cluster-1', 'topics', 'topic-1', 'partitions'
    And header Authorization = 'Bearer ' + authToken
    When method get
    Then status 429
    And match response == """
    <html>
      <head>
        <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
        <title>Error 429 Too Many Requests</title>
      </head>
      <body>
        <h2>HTTP ERROR 429 Too Many Requests</h2>
        <table>
          <tr>
            <th>URI:</th>
            <td>/v3/clusters/my-cluster</td>
          </tr>
          <tr>
            <th>STATUS:</th>
            <td>429</td>
          </tr>
          <tr>
            <th>MESSAGE:</th>
            <td>Too Many Requests</td>
          </tr>
          <tr>
            <th>SERVLET:</th>
            <td>default</td>
          </tr>
        </table>
      </body>
    </html>
    """

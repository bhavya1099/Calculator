# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/partitions_get for http method type GET 
# RoostTestHash=4ee5afee1b
# 
# 

# ********RoostGPT********
Feature: Test Kafka Partition List API Endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Get list of Kafka Partitions with valid <cluster_id> and <topic_name>
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/partitions'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    And match response == { kind: '#string', metadata: { self: '#string', next: '#(null)' }, data: '#array' }
    And match each response.data contains { kind: 'KafkaPartition', metadata: '#object' }

    Examples:
      | cluster_id  | topic_name |
      | 'cluster-1' | 'topic-1'  |
      | 'cluster-2' | 'topic-2'  |

  Scenario Outline: Get list of Kafka Partitions with invalid <cluster_id> or <topic_name>
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/partitions'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 404
    And match response == """{ 
      id: '#string', 
      status: '404', 
      code: '#number', 
      title: 'Not Found', 
      detail: 'The specified cluster or topic does not exist', 
      source: { pointer: '#string' }
    }"""

    Examples:
      | cluster_id  | topic_name   |
      | 'fake-id'   | 'topic-1'    |
      | 'cluster-1' | 'fake-topic' |

  Scenario: Error due to rate limit being exceeded
    Given path 'kafka/v3/clusters/cluster-1/topics/topic-1/partitions'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 429
    And match response contains 'Too Many Requests'


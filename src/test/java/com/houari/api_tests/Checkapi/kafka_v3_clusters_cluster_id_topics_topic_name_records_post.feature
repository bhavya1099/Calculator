# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records_post for http method type POST 
# RoostTestHash=5f512b4001
# 
# 

# ********RoostGPT********
Feature: Testing Kafka Topic Record Production API

  Background:
    * def urlBase = karate.properties['riot_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['riot_AUTH_TOKEN']) }

  Scenario Outline: Produce Kafka Topic Records with various payloads
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/records'
    And request <payload>
    When method post
    Then status 200
    And match response error_code == 200

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_records_post.csv') |

  Scenario Outline: Validation of Kafka Topic Record Production with Bad Request Response
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/records'
    And request <payload>
    When method post
    Then status 400
    And match response error_code == 400
    And match response message == '#string'

    Examples:
      | cluster_id  | topic_name      | payload                                                                                                                                                                                                                                 |
      | 'cluster-1' | 'topic-1'       | """{ "headers": [{ "name": 123, "value": "SGVhZGVyLTE=" }] }"""                                                                                                                                                                         |
      | 'cluster-1' | 'invalid-topic' | """{ "partition_id": "a", "headers": [{ "name": "Header-1", "value": "SGVhZGVyLTE=" }], "key": { "type": "BINARY", "data": "Zm9vYmFy" }, "value": { "type": "JSON", "data": { "foo": "bar" } }, "timestamp": "2021-02-05T19:14:42Z"}""" |
      | 'cluster-1' | 'topic-1'       | """{}"""                                                                                                                                                                                                                                |

  Scenario: Handling of Unsupported Media Type Response
    Given path 'kafka/v3/clusters/cluster-1/topics/topic-1/records'
    And header content-type = 'text/xml'
    And request <some_xml_payload>
    When method post
    Then status 415
    And match response error_code == 415
    And match response message == 'HTTP 415 Unsupported Media Type'

# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records_post for http method type POST 
# RoostTestHash=5f512b4001
# 
# 

# ********RoostGPT********
Feature: Produce Records to Topic

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Produce record with valid <type> and <data>
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/records'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'application/json'
    And request
      """
      {
        "partition_id": <partition_id>,
        "headers": <headers>,
        "key": {
          "type": <key_type>,
          "data": <key_data>
        },
        "value": {
          "type": <val_type>,
          "data": <val_data>
        },
        "timestamp": <timestamp>
      }
      """
    When method post
    Then status 200
    And match response == <expected_response>

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_records_post.csv') |

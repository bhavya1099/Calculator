# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=4f2d9d9489
# ROOST_METHOD_SIG_HASH=7a156baa44
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Work Order Management API',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Retrieve work orders by status',
#     steps: 'Given the API endpoint is "/workorders?status=Open"\n' +
#       'When I send a GET request to retrieve work orders with status "Open"\n' +
#       'Then the response status code should be 200\n' +
#       'And the response should contain a list of open work orders',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Work Order Management API

  Background:
    * def CHECKAPI_43F280E94D_URL = karate.properties['CHECKAPI_43F280E94D_URL'] || karate.get('CHECKAPI_43F280E94D_URL', 'http://localhost:4010')
    * def CHECKAPI_43F280E94D_AUTH_TOKEN = karate.properties['CHECKAPI_43F280E94D_AUTH_TOKEN'] || karate.get('CHECKAPI_43F280E94D_AUTH_TOKEN', 'Bearer_Dummy_Token')

  Scenario: Retrieve work orders by status - Valid Scenario
    * url CHECKAPI_43F280E94D_URL
    And path '/kafka/v3/clusters/{cluster_id}/topics'
    And header Authorization = CHECKAPI_43F280E94D_AUTH_TOKEN
    And param cluster_id = 'example-cluster-id'
    When method get
    Then status 200
    And match response == '#array'
    And match each response contains { id: '#string', status: 'Open' }

  Scenario: Retrieve work orders by status - Invalid Authentication
    * url CHECKAPI_43F280E94D_URL
    And path '/kafka/v3/clusters/{cluster_id}/topics'
    And header Authorization = 'Invalid_Token'
    And param cluster_id = 'example-cluster-id'
    When method get
    Then status 401
    And match response == """
    {
      id: '#string',
      status: '#string',
      code: '#string',
      title: '#string',
      detail: '#string',
      source: {
        pointer: '#string',
        parameter: '#string'
      },
      error_code: '#number',
      message: '#string'
    }
    """

  Scenario: Retrieve work orders by status - Exceed Rate Limit
    * url CHECKAPI_43F280E94D_URL
    And path '/kafka/v3/clusters/{cluster_id}/topics'
    And header Authorization = CHECKAPI_43F280E94D_AUTH_TOKEN
    And param cluster_id = 'example-cluster-id'
    When method get
    Then status 429
    And match response == """
    {
      description: 'Indicates that a rate limit threshold has been reached, and the client should retry again later.'
    }
    """

  Scenario: Retrieve work orders by status - Server Error
    * url CHECKAPI_43F280E94D_URL
    And path '/kafka/v3/clusters/{cluster_id}/topics'
    And header Authorization = CHECKAPI_43F280E94D_AUTH_TOKEN
    And param cluster_id = 'example-cluster-id'
    When method get
    Then status 500
    And match response == """
    {
      id: '#string',
      status: '#string',
      code: '#string',
      title: '#string',
      detail: '#string',
      source: {
        pointer: '#string',
        parameter: '#string'
      },
      error_code: '#number',
      message: '#string'
    }
    """

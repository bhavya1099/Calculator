# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}_get for http method type GET 
# RoostTestHash=0ecd20dc17
# 
# 

# ********RoostGPT********
Feature: Validate Kafka Partition API

  Background:
    * def urlBase = karate.properties['UIOP_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['UIOP_AUTH_TOKEN']) }

  Scenario Outline: Get Kafka Partition details with valid cluster, topic, and partition IDs
    Given path 'kafka/v3/clusters', <cluster_id>, 'topics', <topic_name>, 'partitions', <partition_id>
    When method get
    Then status 200
    And match response contains { 
      kind: '#string', 
      metadata: '#object', 
      cluster_id: '#string', 
      topic_name: '#string', 
      partition_id: '#number', 
      replicas: '#object', 
      leader: '#object', 
      reassignment: '#object' 
    }

    Examples:
      | cluster_id  | topic_name | partition_id |
      | 'cluster-1' | 'topic-1'  |            0 |
      | 'cluster-1' | 'topic-1'  |            1 |

  Scenario Outline: Get Kafka Partition details which does not exist
    Given path 'kafka/v3/clusters', <cluster_id>, 'topics', <topic_name>, 'partitions', <partition_id>
    When method get
    Then status 404
    And match response contains { 
      id: '#string', 
      status: '404', 
      code: '#number', 
      title: '#string', 
      detail: '#string' 
    }

    Examples:
      | cluster_id  | topic_name | partition_id |
      | 'cluster-2' | 'topic-3'  |          999 |
      | 'cluster-2' | 'unknown'  |          100 |

  Scenario: Attempt to POST data to read-only Kafka Partition endpoint
    Given path 'kafka/v3/clusters', 'cluster-1', 'topics', 'topic-1', 'partitions', 0
    And request { some: 'data' }
    When method post
    Then status 405

  Scenario: Rate limit error when exceeding API call limits
    Given path 'kafka/v3/clusters', 'cluster-x', 'topics', 'topic-x', 'partitions', 2
    When method get
    Then status 429
    And match response == """
    <html>
    <head>
      <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
      <title>Error 429 Too Many Requests</title>
    </head>
    <body>
      <h2>HTTP ERROR 429 Too Many Requests</h2>
      <table>
        <tr>
          <th>URI:</th>
          <td>/v3/clusters/my-cluster</td>
        </tr>
        <tr>
          <th>STATUS:</th>
          <td>429</td>
        </tr>
        <tr>
          <th>MESSAGE:</th>
          <td>Too Many Requests</td>
        </tr>
        <tr>
          <th>SERVLET:</th>
          <td>default</td>
        </tr>
      </table>
    </body>
    </html>
    """

# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}_get for http method type GET 
# RoostTestHash=0ecd20dc17
# 
# 

# ********RoostGPT********
Feature: Validate GET Partition Endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Verify successful GET request for partition details
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/partitions/', <partition_id>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    And match response == <expected_response>

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_partitions_partition_id_get.csv') |

  Scenario Outline: Verify GET request with invalid partition ID returns 404
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/partitions/', <partition_id>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 404
    And match response == <expected_response>

    Examples:
      | cluster_id  | topic_name | partition_id | expected_response                       |
      | 'cluster-1' | 'topic-1'  |          999 | {error_code: 40403, message: '#string'} |

  Scenario Outline: Verify GET request with unauthorized access returns 401
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/partitions/', <partition_id>
    And header Authorization = 'Bearer ' + 'invalid_token'
    When method get
    Then status 401
    And match response == <expected_response>

    Examples:
      | cluster_id  | topic_name | partition_id | expected_response                       |
      | 'cluster-1' | 'topic-1'  |            1 | {error_code: 40101, message: '#string'} |

  Scenario Outline: Verify GET request with rate limit exceeded returns 429
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>, '/partitions/', <partition_id>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When repeat(101) { method get }
    Then status 429
    And match response == <expected_response>

    Examples:
      | cluster_id  | topic_name | partition_id | expected_response                                                                                                                |
      | 'cluster-1' | 'topic-1'  |            1 | """<html><head><title>Error 429 Too Many Requests</title></head><body><h2>HTTP ERROR 429 Too Many Requests</h2></body></html>""" |

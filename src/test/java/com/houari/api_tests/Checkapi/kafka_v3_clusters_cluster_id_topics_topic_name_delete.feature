# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}_delete for http method type DELETE 
# RoostTestHash=b9526a5d59
# 
# 

# ********RoostGPT********
Feature: Delete Topic from Kafka Cluster

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Delete a Kafka topic with valid credentials and expect no content
    Given path '/kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method delete
    Then status 204

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_delete.csv') |

  Scenario Outline: Attempt to delete a Kafka topic with an invalid topic name and expect not found error
    Given path '/kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method delete
    Then status 404
    And match response ==
      """
      { 
        "error_code": 40403, 
        "message": "This server does not host this topic-partition."
      }
      """

    Examples:
      | cluster_id | topic_name   |
      | cluster1   | unknownTopic |

  Scenario Outline: Delete a Kafka topic without authorization and expect unauthorized error
    Given path '/kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    When method delete
    Then status 401
    And match response ==
      """
      { 
        "error_code": 40101, 
        "message": "Authentication failed" 
      }
      """

    Examples:
      | cluster_id | topic_name |
      | cluster1   | topicName1 |

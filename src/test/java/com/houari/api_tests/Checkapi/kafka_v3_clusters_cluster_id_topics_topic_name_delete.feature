# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}_delete for http method type DELETE 
# RoostTestHash=b9526a5d59
# 
# 

# ********RoostGPT********
Feature: Delete Kafka Topic

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Delete a Kafka topic with valid credentials and expect no content
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method delete
    Then status 204

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_delete.csv') |

  Scenario Outline: Delete a Kafka topic with invalid credentials and expect unauthorized error
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer wrong_token'
    When method delete
    Then status 401
    And match response ==
      """
      { 
        "id": "#string", 
        "status": "401", 
        "code": "40101", 
        "title": "#string", 
        "detail": "#string" 
      }
      """

    Examples:
      | cluster_id  | topic_name |
      | 'cluster-1' | 'topic-1'  |

  Scenario Outline: Delete a Kafka topic that does not exist and expect not found error
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method delete
    Then status 404
    And match response ==
      """
      { 
        "id": "#string", 
        "status": "404", 
        "code": "40403", 
        "title": "#string", 
        "detail": "#string" 
      }
      """

    Examples:
      | cluster_id  | topic_name      |
      | 'cluster-1' | 'unknown-topic' |

  Scenario Outline: Delete a Kafka topic with invalid request format and expect bad request error
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    And request
      """
      { 
        "invalidField": "value" 
      }
      """
    When method delete
    Then status 400
    And match response ==
      """
      { 
        "id": "#string", 
        "status": "400", 
        "code": "#number", 
        "title": "#string", 
        "detail": "#string" 
      }
      """

    Examples:
      | cluster_id  | topic_name |
      | 'cluster-1' | 'topic-1'  |

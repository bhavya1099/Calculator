# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=3bd78fea7d
# ROOST_METHOD_SIG_HASH=2c0391284c
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Work Order Management API',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Update an existing work order',
#     steps: 'Given the API endpoint is "/workorders/{id}"\n' +
#       'And the work order ID is "WO123"\n' +
#       'And I have the updated work order details:\n' +
#       '      """\n' +
#       '      {\n' +
#       '        "status": "In Progress",\n' +
#       '        "priority": "Medium",\n' +
#       '        "assignedTo": "Jane Doe",\n' +
#       '        "dueDate": "2023-07-20T17:00:00Z"\n' +
#       '      }\n' +
#       'When I send a PUT request to update the work order\n' +
#       'Then the response status code should be 200\n' +
#       'And the response should contain the updated work order details',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Work Order Management API

  Background:
    * url 'https://api.example.com'
    * def authToken = karate.env['AUTH_TOKEN']
    * header Authorization = 'Bearer ' + authToken

  Scenario: Update an existing work order with valid details
    Given path '/workorders/{id}'
    And path 'WO123'
    And request
      """
      {
        "status": "In Progress",
        "priority": "Medium",
        "assignedTo": "Jane Doe",
        "dueDate": "2023-07-20T17:00:00Z"
      }
      """
    When method put
    Then status 200
    And match response ==
      """
      {
        "status": "In Progress",
        "priority": "Medium",
        "assignedTo": "Jane Doe",
        "dueDate": "2023-07-20T17:00:00Z"
      }
      """

  Scenario: Update an existing work order with invalid ID
    Given path '/workorders/{id}'
    And path 'INVALID_ID'
    And request
      """
      {
        "status": "Completed",
        "priority": "High",
        "assignedTo": "John Smith",
        "dueDate": "2023-08-15T17:00:00Z"
      }
      """
    When method put
    Then status 404
    And match response.message == 'Work order not found'

  Scenario: Update an existing work order with invalid data
    Given path '/workorders/{id}'
    And path 'WO123'
    And request
      """
      {
        "status": "Unknown Status",
        "priority": "Unknown Priority",
        "assignedTo": "",
        "dueDate": "invalid-date-format"
      }
      """
    When method put
    Then status 400
    And match response.message == 'Invalid request data'

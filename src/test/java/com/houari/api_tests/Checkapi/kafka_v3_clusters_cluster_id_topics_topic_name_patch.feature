# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}_patch for http method type PATCH 
# RoostTestHash=9d07b67b96
# 
# 

# ********RoostGPT********
Feature: Update Partition Count of a Kafka Topic

  Background:
    * def urlBase = karate.properties['UIOP_URL_BASE'] ? karate.properties['UIOP_URL_BASE'] : 'http://localhost:4010'
    * configure headers = { Authorization: #(karate.properties['UIOP_AUTH_TOKEN']) }
    * url urlBase

  @topicUpdate
  Scenario Outline: Increase the number of partitions for a specific kafka topic
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And request { "partitions_count": <partitions_count> }
    When method patch
    Then status 200
    And match response == "#object"
    And match response.partitions_count == <partitions_count>

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_patch.csv') |

  @topicBadRequest
  Scenario Outline: Attempt to update kafka topic with invalid partitions count
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And request { "partitions_count": <partitions_count> }
    When method patch
    Then status 400
    And match response.code == #string
    And match response.message == #string

    Examples:
      | cluster_id  | topic_name | partitions_count |
      | "cluster-1" | "topic-1"  |                0 |

  @authenticationFailure
  Scenario Outline: Kafka topics API request with invalid authentication token
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And request { "partitions_count": <partitions_count> }
    When method patch
    Then status 401
    And match response.code == '40101'
    And match response.message == 'Authentication failed'

    Examples:
      | cluster_id  | topic_name | partitions_count |
      | "cluster-1" | "topic-1"  |                1 |

  @authorizationFailure
  Scenario Outline: Kafka topics API request without appropriate authorization
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And request { "partitions_count": <partitions_count> }
    When method patch
    Then status 403
    And match response.code == '40301'
    And match response.message == 'Request is not authorized'

    Examples:
      | cluster_id  | topic_name | partitions_count |
      | "cluster-1" | "topic-1"  |                1 |

  @rateLimitExceeded
  Scenario Outline: Kafka topics API request exceeds rate limit
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And request { "partitions_count": <partitions_count> }
    When method patch
    Then status 429
    And match response contains 'Too Many Requests'

    Examples:
      | cluster_id  | topic_name | partitions_count |
      | "cluster-1" | "topic-1"  |                1 |

  @serverError
  Scenario Outline: Kafka topics API request encounters server error
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And request { "partitions_count": <partitions_count> }
    When method patch
    Then status 500
    And match response.code == 500
    And match response.message == 'Internal Server Error'

    Examples:
      | cluster_id  | topic_name | partitions_count |
      | "cluster-1" | "topic-1"  |                1 |

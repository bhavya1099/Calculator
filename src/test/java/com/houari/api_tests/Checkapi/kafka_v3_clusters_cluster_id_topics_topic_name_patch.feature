# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}_patch for http method type PATCH 
# RoostTestHash=9d07b67b96
# 
# 

# ********RoostGPT********
Feature: Update Partition Count for Kafka Topic

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Increase number of partitions for a Kafka topic with valid input
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + authToken
    And header content-type = 'application/json'
    And request
      """
      { "partitions_count": "#(partitions_count)" }
      """
    When method patch
    Then status 200
    And match response == <expected_response>

    Examples:
      | read('kafka_v3_clusters_cluster_id_topics_topic_name_patch.csv') |

  Scenario Outline: Attempt to update partitions count to an invalid number
    Given path 'kafka/v3/clusters/', <cluster_id>, '/topics/', <topic_name>
    And header Authorization = 'Bearer ' + authToken
    And header content-type = 'application/json'
    And request
      """
      { "partitions_count": "#(partitions_count)" }
      """
    When method patch
    Then status 400
    And match response == <expected_response>

    Examples:
      | cluster_id  | topic_name | partitions_count | expected_response                                                     |
      | 'cluster-1' | 'topic-1'  |                1 | { "error_code": 40002, "message": "Topic already has 1 partitions." } |

  Scenario: Unauthorized access to update partitions
    Given path 'kafka/v3/clusters/cluster-1/topics/topic-1'
    And header Authorization = 'Bearer wrong_token'
    And header content-type = 'application/json'
    And request
      """
      { "partitions_count": 2 }
      """
    When method patch
    Then status 401
    And match response ==
      """
      { "error_code": 40101, "message": "Authentication failed" }
      """

  Scenario: Access forbidden when updating partitions
    Given path 'kafka/v3/clusters/cluster-1/topics/topic-1'
    And header Authorization = 'Bearer ' + authToken
    And header content-type = 'application/json'
    And request
      """
      { "partitions_count": 2 }
      """
    When method patch
    Then status 403
    And match response ==
      """
      { "error_code": 40301, "message": "Request is not authorized" }
      """

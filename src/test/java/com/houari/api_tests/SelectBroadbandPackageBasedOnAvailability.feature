# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=9adbc3cb1f
# ROOST_METHOD_SIG_HASH=b70f07ae36
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Selecting a broadband package based on availability',
#     steps: 'Given "John Doe" received the broadband availability report\n' +
#       'And he finds that "BL_1000MB" broadband speed is available at his address\n' +
#       'When John selects the "BL_1000MB" package\n' +
#       'Then the system should validate the selection\n' +
#       "And confirm the broadband package for John's address",
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Check broadband service availability and selection

  Background:
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_URL = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_URL'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_URL', 'http://localhost:4010')
    * def SERVICEACTIVATION_92C99A67C4_URL = karate.properties['SERVICEACTIVATION_92C99A67C4_URL'] || karate.get('SERVICEACTIVATION_92C99A67C4_URL', 'http://localhost:4010')
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN', 'Bearer_Dummy_Token')
    * def SERVICEACTIVATION_92C99A67C4_AUTH_TOKEN = karate.properties['SERVICEACTIVATION_92C99A67C4_AUTH_TOKEN'] || karate.get('SERVICEACTIVATION_92C99A67C4_AUTH_TOKEN', 'Bearer_Dummy_Token')
    Given a customer base where each customer has a unique subscriber ID

  Scenario: Selecting a broadband package based on availability
    Given path "availabilityCheck"
    And url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL
    And request { "customer": "John Doe", "address": "John's address" }
    When method post
    Then status 200
    And match response.control.type == 'S'
    And match response.resource.resource.availabilityType == 1
    Given path "configuration"
    And url SERVICEACTIVATION_92C99A67C4_URL
    And request { "configuration": { "action": {"type": "HGW_WIFI_ENABLE"}, "id": "BL_1000MB", "adminStatus": "1", "startDate": "2022-01-01T10:00:00", "endDate": "2022-12-31T10:00:00", "state": "active"} }
    When method post
    Then status 200
    And match response.control.type == 'S'
    And match response.configuration.configuration.action.type == 'HGW_WIFI_ENABLE'
    And match response.configuration.configuration.id == 'BL_1000MB'
    And match response.configuration.configuration.adminStatus == '1'
    Given path "listener/configurationResultEvent"
    And url SERVICEACTIVATION_92C99A67C4_URL
    And request { "notification": { "customer": "John Doe", "package": "BL_1000MB", "status": "confirmed" } }
    When method post
    Then status 204

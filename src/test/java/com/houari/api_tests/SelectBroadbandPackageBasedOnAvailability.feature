# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=9adbc3cb1f
# ROOST_METHOD_SIG_HASH=b70f07ae36
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Selecting a broadband package based on availability',
#     steps: 'Given "John Doe" received the broadband availability report\n' +
#       'And he finds that "BL_1000MB" broadband speed is available at his address\n' +
#       'When John selects the "BL_1000MB" package\n' +
#       'Then the system should validate the selection\n' +
#       "And confirm the broadband package for John's address",
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Check broadband service availability and selection

  Background:
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_URL = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_URL'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_URL', 'http://localhost:4010')
    * url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN', 'Bearer_Dummy_Token')
    * header Authorization = RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN
    #Given a customer base where each customer has a unique subscriber ID

  Scenario Outline: Selecting a broadband package based on availability
    * def customerId = <customerId>
    * def package = <package>
    Given path '/availabilityCheck'
    And request { customer: '#(customerId)', address: '#(package)' }
    When method post
    Then status 200
    And match response == { control: '#object', 'control.message' : '#string', 'control.code': '#string'}
    And assert response.control.message == '<assertMessage>'

    Examples:
      | customerId | package     | assertMessage                                      |
      | 'John Doe' | 'BL_1000MB' | 'Broadband package confirmed for John\\'s address' |

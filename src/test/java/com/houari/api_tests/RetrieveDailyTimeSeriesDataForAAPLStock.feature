# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=e5c184303b
# ROOST_METHOD_SIG_HASH=efef3e7528
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Retrieve daily time series data for AAPL stock',
#     steps: 'Given the Alpha Vantage API endpoint is "https://www.alphavantage.co/query"\n' +
#       'When I send a GET request with the following parameters:\n' +
#       '      | Parameter | Value                 |\n' +
#       '      | function  | TIME_SERIES_DAILY     |\n' +
#       '      | symbol    | AAPL                  |\n' +
#       '      | apikey    | demo                  |\n' +
#       'Then the response status code should be 200\n' +
#       'And the response should contain "Meta Data" with the following information:\n' +
#       '      | Field           | Value                                             |\n' +
#       '      | 1. Information  | Daily Prices (open, high, low, close) and Volumes |\n' +
#       '      | 2. Symbol       | AAPL                                              |\n' +
#       '      | 4. Output Size  | Compact                                           |\n' +
#       '      | 5. Time Zone    | US/Eastern                                        |\n' +
#       'And the response should contain "Time Series (Daily)" data\n' +
#       'And each day in the time series should have the following fields:\n' +
#       '      | Field     |\n' +
#       '      | 1. open   |\n' +
#       '      | 2. high   |\n' +
#       '      | 3. low    |\n' +
#       '      | 4. close  |\n' +
#       '      | 5. volume |',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Test API from Alphavantage.co

# Setup API Host
Background:
   Given def ALPHAVANTAGE_GET_RESOLVED_URL = karate.properties['ALPHAVANTAGE_GET_RESOLVED_URL'] || karate.get('ALPHAVANTAGE_GET_RESOLVED_URL', 'http://localhost:4010')

Scenario Outline: Retrieve daily time series data for AAPL stock
   When url ALPHAVANTAGE_GET_RESOLVED_URL 
   And path '/query'
   And param symbol = 'AAPL'
   And param apikey = 'demo'
   And param function = 'TIME_SERIES_DAILY'
   And method get
   
Then status 200

# Test response
   And match response['Meta Data']['1. Information'] == 'Daily Prices (open, high, low, close) and Volumes'
   And match response['Meta Data']['2. Symbol'] == 'AAPL'
   And match response['Meta Data']['4. Output Size'] == 'Compact'
   And match response['Meta Data']['5. Time Zone'] == 'US/Eastern'
   And def timeSeriesData = response['Time Series (Daily)']
   And def validFields = ['1. open', '2. high', '3. low', '4. close', '5. volume']

* def validateFields = 
    """
    function(data, validFields) {
      for(var key in data) {
        var dailyData = data[key];
        for(var field in dailyData) {
          if(!validFields.includes(field)) {
            return false;
          }
        }
      }
      return true;
    }
    """
* assert validateFields(timeSeriesData, validFields)

// ********RoostGPT********
/*
Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 

ROOST_METHOD_HASH=5fa26a145f
ROOST_METHOD_SIG_HASH=c420c35532

 ########## Scenario ########## 

{
  feature: 'Feature: Test API from Alphavantage.co',
  background: null,
  rule: null,
  scenario: {
    title: 'Scenario: Retrieve data with a different function',
    steps: 'Given the API endpoint is "https://www.alphavantage.co/query"\n' +
      'And I have a valid API key\n' +
      'When I send a GET request with the following parameters:\n' +
      '      | Parameter | Value        |\n' +
      '      | function  | <function>   |\n' +
      '      | symbol    | IBM          |\n' +
      '      | apikey    | demo         |\n' +
      'Then the response status code should be 200',
    examples: 'Examples:\n' +
      '      | function           |\n' +
      '      | TIME_SERIES_WEEKLY |\n' +
      '      | TIME_SERIES_MONTHLY|'
  }
}

*/

// ********RoostGPT********
package com.houari.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

public class RetrieveDataWithDifferentFunctionTest {

    private static final String API_ENDPOINT = "https://www.alphavantage.co/query";
    private static final String API_KEY = "demo";

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = API_ENDPOINT;
    }

    @ParameterizedTest
    @CsvSource({
        "TIME_SERIES_WEEKLY",
        "TIME_SERIES_MONTHLY"
    })
    public void testRetrieveDataWithDifferentFunction(String function) {
        Response response = given()
            .queryParam("function", function)
            .queryParam("symbol", "IBM")
            .queryParam("apikey", API_KEY)
        .when()
            .get()
        .then()
            .statusCode(200)
            .extract().response();

        // Additional assertions can be added here if needed
    }
}

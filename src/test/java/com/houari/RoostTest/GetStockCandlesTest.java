// ********RoostGPT********
/*
Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 

ROOST_METHOD_HASH=e33f019959
ROOST_METHOD_SIG_HASH=c0ec67e6d4

 ########## Scenario ########## 

{
  feature: 'Feature: Test API from Alphavantage.co',
  background: null,
  rule: null,
  scenario: {
    title: 'Scenario: Get Stock Candles',
    steps: 'Given the Finnhub API base URL is "https://finnhub.io/api/v1"\n' +
      'When I send a GET request to "/stock/candle?symbol=AAPL&resolution=D&from=1625097600&to=1627689600"\n' +
      'Then the response status code should be 200\n' +
      'And the response should contain OHLC data',
    examples: ''
  }
}

*/

// ********RoostGPT********
package com.houari.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class GetStockCandlesTest {

    private static final String BASE_URL = "https://finnhub.io/api/v1";
    private static final String API_KEY = "YOUR_API_KEY"; // Replace with your actual Finnhub API key

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = BASE_URL;
    }

    @Test
    public void testGetStockCandles() {
        // Given the Finnhub API base URL is "https://finnhub.io/api/v1"
        // When I send a GET request to "/stock/candle?symbol=AAPL&resolution=D&from=1625097600&to=1627689600"
        Response response = given()
                .queryParam("symbol", "AAPL")
                .queryParam("resolution", "D")
                .queryParam("from", "1625097600")
                .queryParam("to", "1627689600")
                .queryParam("token", API_KEY)
                .when()
                .get("/stock/candle");

        // Then the response status code should be 200
        response.then().statusCode(200);

        // And the response should contain OHLC data
        response.then()
                .body("c", notNullValue())
                .body("h", notNullValue())
                .body("l", notNullValue())
                .body("o", notNullValue())
                .body("s", equalTo("ok"))
                .body("t", notNullValue())
                .body("v", notNullValue());
    }
}

// ********RoostGPT********
/*
Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 

ROOST_METHOD_HASH=9fe4b49d45
ROOST_METHOD_SIG_HASH=05511af534

 ########## Scenario ########## 

{
  feature: 'Feature: Test API from Alphavantage.co',
  background: null,
  rule: null,
  scenario: {
    title: 'Scenario: Attempt to retrieve data with an invalid symbol',
    steps: 'Given the Alpha Vantage API endpoint is "https://www.alphavantage.co/query"\n' +
      'When I send a GET request with the following parameters:\n' +
      '      | Parameter | Value             |\n' +
      '      | function  | TIME_SERIES_DAILY |\n' +
      '      | symbol    | INVALID_SYMBOL    |\n' +
      '      | apikey    | demo              |\n' +
      'Then the response should indicate an error for invalid symbol',
    examples: ''
  }
}

*/

// ********RoostGPT********
package com.houari.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class AttemptToRetrieveDataWithAnInvalidSymbolTest {

    private static final String BASE_URL = "https://www.alphavantage.co/query";
    private static final String API_KEY = "demo";

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = BASE_URL;
    }

    @Test
    public void testRetrieveDataWithInvalidSymbol() {
        Response response = given()
            .queryParam("function", "TIME_SERIES_DAILY")
            .queryParam("symbol", "INVALID_SYMBOL")
            .queryParam("apikey", API_KEY)
        .when()
            .get()
        .then()
            .statusCode(200) // Alpha Vantage API returns 200 even for errors
            .body("Error Message", notNullValue())
            .body("Error Message", containsString("Invalid API call"))
            .extract().response();

        // Additional assertions can be added here if needed
        System.out.println("Response: " + response.asString());
    }
}

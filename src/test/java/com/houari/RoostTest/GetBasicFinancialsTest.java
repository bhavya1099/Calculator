// ********RoostGPT********
/*
Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 

ROOST_METHOD_HASH=0a60f0444c
ROOST_METHOD_SIG_HASH=736ee1b30e

 ########## Scenario ########## 

{
  feature: 'Feature: Test API from Alphavantage.co',
  background: null,
  rule: null,
  scenario: {
    title: 'Scenario: Get Basic Financials',
    steps: 'Given the Finnhub API base URL is "https://finnhub.io/api/v1"\n' +
      'When I send a GET request to "/stock/metric?symbol=AAPL&metric=all"\n' +
      'Then the response status code should be 200\n' +
      'And the response should contain financial metrics',
    examples: ''
  }
}

*/

// ********RoostGPT********
package com.houari.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class GetBasicFinancialsTest {

    private static final String BASE_URL = "https://finnhub.io/api/v1";
    private static final String API_KEY = "YOUR_API_KEY"; // Replace with your actual Finnhub API key

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = BASE_URL;
    }

    @Test
    public void testGetBasicFinancials() {
        Response response = given()
                .queryParam("symbol", "AAPL")
                .queryParam("metric", "all")
                .queryParam("token", API_KEY)
                .when()
                .get("/stock/metric")
                .then()
                .statusCode(200)
                .body("$", hasKey("metric"))
                .extract()
                .response();

        // Additional assertions can be added here to verify specific financial metrics
        // For example:
        // response.then().body("metric.52WeekHigh", notNullValue());
        // response.then().body("metric.52WeekLow", notNullValue());
    }
}

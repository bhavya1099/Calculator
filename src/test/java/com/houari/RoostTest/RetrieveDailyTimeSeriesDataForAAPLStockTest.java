// ********RoostGPT********
/*
Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 

ROOST_METHOD_HASH=e5c184303b
ROOST_METHOD_SIG_HASH=efef3e7528

 ########## Scenario ########## 

{
  feature: 'Feature: Test API from Alphavantage.co',
  background: null,
  rule: null,
  scenario: {
    title: 'Scenario: Retrieve daily time series data for AAPL stock',
    steps: 'Given the Alpha Vantage API endpoint is "https://www.alphavantage.co/query"\n' +
      'When I send a GET request with the following parameters:\n' +
      '      | Parameter | Value                 |\n' +
      '      | function  | TIME_SERIES_DAILY     |\n' +
      '      | symbol    | AAPL                  |\n' +
      '      | apikey    | demo                  |\n' +
      'Then the response status code should be 200\n' +
      'And the response should contain "Meta Data" with the following information:\n' +
      '      | Field           | Value                                             |\n' +
      '      | 1. Information  | Daily Prices (open, high, low, close) and Volumes |\n' +
      '      | 2. Symbol       | AAPL                                              |\n' +
      '      | 4. Output Size  | Compact                                           |\n' +
      '      | 5. Time Zone    | US/Eastern                                        |\n' +
      'And the response should contain "Time Series (Daily)" data\n' +
      'And each day in the time series should have the following fields:\n' +
      '      | Field     |\n' +
      '      | 1. open   |\n' +
      '      | 2. high   |\n' +
      '      | 3. low    |\n' +
      '      | 4. close  |\n' +
      '      | 5. volume |',
    examples: ''
  }
}

*/

// ********RoostGPT********
package com.houari.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class RetrieveDailyTimeSeriesDataForAAPLStockTest {

    private static final String BASE_URL = "https://www.alphavantage.co/query";
    private static final String API_KEY = "demo";

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = BASE_URL;
    }

    @Test
    public void testRetrieveDailyTimeSeriesDataForAAPLStock() {
        Response response = given()
                .queryParam("function", "TIME_SERIES_DAILY")
                .queryParam("symbol", "AAPL")
                .queryParam("apikey", API_KEY)
                .when()
                .get();

        response.then()
                .statusCode(200)
                .body("Meta Data", notNullValue())
                .body("Meta Data.1. Information", equalTo("Daily Prices (open, high, low, close) and Volumes"))
                .body("Meta Data.2. Symbol", equalTo("AAPL"))
                .body("Meta Data.4. Output Size", equalTo("Compact"))
                .body("Meta Data.5. Time Zone", equalTo("US/Eastern"))
                .body("Time Series (Daily)", notNullValue());

        // Verify the structure of the first day in the time series
        String firstDay = response.jsonPath().getString("Time Series (Daily).keySet()[0]");
        response.then()
                .body("Time Series (Daily)." + firstDay + ".1. open", notNullValue())
                .body("Time Series (Daily)." + firstDay + ".2. high", notNullValue())
                .body("Time Series (Daily)." + firstDay + ".3. low", notNullValue())
                .body("Time Series (Daily)." + firstDay + ".4. close", notNullValue())
                .body("Time Series (Daily)." + firstDay + ".5. volume", notNullValue());
    }
}

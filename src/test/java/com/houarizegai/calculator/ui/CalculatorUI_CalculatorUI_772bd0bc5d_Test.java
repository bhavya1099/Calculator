// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Verify the initialization of the CalculatorUI
   Test: Create an instance of CalculatorUI and check if it is not null.

2. Scenario: Verify that the JFrame window is initialized with the correct title, size, and location.
   Test: Create an instance of CalculatorUI and check if the JFrame window title matches the expected value, the size is as expected, and the window location is set to null.

3. Scenario: Verify the initialization of the columns and rows with the correct values.
   Test: Create an instance of CalculatorUI and check if the columns and rows arrays are initialized with the correct values.

4. Scenario: Verify the initialization of the input screen.
   Test: Create an instance of CalculatorUI and check if the input screen is initialized successfully.

5. Scenario: Verify the initialization of the buttons.
   Test: Create an instance of CalculatorUI and check if the buttons are initialized successfully.

6. Scenario: Verify the initialization of the calculator type selector.
   Test: Create an instance of CalculatorUI and check if the calculator type selector is initialized successfully.

7. Scenario: Verify the initialization of the theme selector.
   Test: Create an instance of CalculatorUI and check if the theme selector is initialized successfully.

8. Scenario: Verify that the JFrame window is not resizable and closes the application when exited.
   Test: Create an instance of CalculatorUI and check if the JFrame window is not resizable and the default close operation is set to EXIT_ON_CLOSE.

9. Scenario: Verify that the JFrame window is visible after initialization.
   Test: Create an instance of CalculatorUI and check if the JFrame window is visible.

10. Scenario: Verify that the themesMap is loaded with themes.
    Test: Create an instance of CalculatorUI and check if the themesMap is not empty after the themes are loaded.
*/

// ********RoostGPT********
package com.houarizegai.calculator.ui;

import com.houarizegai.calculator.theme.ThemeLoader;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class CalculatorUI_CalculatorUI_772bd0bc5d_Test {

    private CalculatorUI calculatorUI;

    @BeforeEach
    public void setUp() {
        calculatorUI = new CalculatorUI();
    }

    @Test
    public void testCalculatorUIInstanceNotNull() {
        assertNotNull(calculatorUI);
    }

    @Test
    public void testJFrameTitle() {
        assertEquals("Calculator", calculatorUI.window.getTitle());
    }

    @Test
    public void testJFrameSize() {
        assertEquals(410, calculatorUI.window.getWidth());
        assertEquals(600, calculatorUI.window.getHeight());
    }

    @Test
    public void testJFrameLocation() {
        assertNull(calculatorUI.window.getLocation());
    }

    @Test
    public void testInputScreenNotNull() {
        assertNotNull(calculatorUI.inputScreen);
    }

    @Test
    public void testButtonsNotNull() {
        assertNotNull(calculatorUI.btnC);
        assertNotNull(calculatorUI.btnBack);
        assertNotNull(calculatorUI.btnMod);
        assertNotNull(calculatorUI.btnDiv);
        // TODO: Add assertions for the rest of the buttons
    }

    @Test
    public void testCalculatorTypeSelectorNotNull() {
        assertNotNull(calculatorUI.comboCalculatorType);
    }

    @Test
    public void testThemeSelectorNotNull() {
        assertNotNull(calculatorUI.comboTheme);
    }

    @Test
    public void testJFrameNotResizable() {
        assertFalse(calculatorUI.window.isResizable());
    }

    @Test
    public void testJFrameCloseOperation() {
        assertEquals(JFrame.EXIT_ON_CLOSE, calculatorUI.window.getDefaultCloseOperation());
    }

    @Test
    public void testJFrameVisibility() {
        assertTrue(calculatorUI.window.isVisible());
    }

    @Test
    public void testThemesMapNotEmpty() {
        assertFalse(ThemeLoader.loadThemes().isEmpty());
    }
}

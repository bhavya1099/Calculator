// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when the textColor is null
   - Description: The function should return null when the textColor is not set.
   
2. Scenario: Test when the textColor is an empty string
   - Description: The function should return an empty string when the textColor is set to an empty string.
   
3. Scenario: Test when the textColor is a valid color
   - Description: The function should return the correct color when the textColor is set to a valid color.
   
4. Scenario: Test when the textColor is a valid color with leading or trailing whitespaces
   - Description: The function should trim the whitespaces and return the correct color when the textColor is set to a valid color with leading or trailing whitespaces.
   
5. Scenario: Test when the textColor is a string that is not a valid color
   - Description: The function should return the string as it is when the textColor is set to a string that is not a valid color.
   
6. Scenario: Test when the textColor is a valid color in different case
   - Description: The function should be case-insensitive and should return the correct color when the textColor is set to a valid color in different case.

Note: The above scenarios assume that the textColor is a String representing a color. If it is not a string or does not represent a color, the scenarios would need to be adjusted accordingly.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_getTextColor_61d6abd2a7_Test {

    private Theme theme;

    @BeforeEach
    public void setup() {
        theme = new Theme();
    }

    @Test
    public void testGetTextColor_WhenTextColorIsNull() {
        theme.setTextColor(null);
        assertNull(theme.getTextColor());
    }

    @Test
    public void testGetTextColor_WhenTextColorIsEmpty() {
        theme.setTextColor("");
        assertEquals("", theme.getTextColor());
    }

    @Test
    public void testGetTextColor_WhenTextColorIsValidColor() {
        theme.setTextColor("red");
        assertEquals("red", theme.getTextColor());
    }

    @Test
    public void testGetTextColor_WhenTextColorIsValidColorWithWhitespaces() {
        theme.setTextColor(" blue ");
        assertEquals("blue", theme.getTextColor());
    }

    @Test
    public void testGetTextColor_WhenTextColorIsNotAValidColor() {
        theme.setTextColor("notAColor");
        assertEquals("notAColor", theme.getTextColor());
    }

    @Test
    public void testGetTextColor_WhenTextColorIsValidColorInDifferentCase() {
        theme.setTextColor("BlUe");
        assertEquals("BlUe", theme.getTextColor());
    }
}

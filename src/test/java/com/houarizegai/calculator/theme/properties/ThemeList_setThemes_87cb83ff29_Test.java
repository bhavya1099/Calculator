// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. **Scenario**: Check if the function properly sets the theme list.
   **Test Steps**: 
     - Create a list of themes.
     - Execute the setThemes function with the created list.
     - Check if the function has properly set the theme list.

2. **Scenario**: Check if the function correctly handles an empty list.
   **Test Steps**: 
     - Execute the setThemes function with an empty list.
     - Check if the function has properly set the theme list to an empty list.

3. **Scenario**: Check if the function correctly handles a null value.
   **Test Steps**: 
     - Execute the setThemes function with a null value.
     - Check if the function has properly set the theme list to null.

4. **Scenario**: Check if the function correctly handles a list with duplicate themes.
   **Test Steps**: 
     - Create a list of themes with duplicate values.
     - Execute the setThemes function with the created list.
     - Check if the function has properly set the theme list with duplicate themes.

5. **Scenario**: Check if the function correctly handles a list with a large number of themes.
   **Test Steps**: 
     - Create a list of themes with a large number of themes.
     - Execute the setThemes function with the created list.
     - Check if the function has properly set the theme list with a large number of themes.

6. **Scenario**: Check if the function correctly handles a list with a single theme.
   **Test Steps**: 
     - Create a list of themes with a single theme.
     - Execute the setThemes function with the created list.
     - Check if the function has properly set the theme list with a single theme. 

7. **Scenario**: Check if the function correctly handles a list with themes of different types.
   **Test Steps**: 
     - Create a list of themes with different types of themes.
     - Execute the setThemes function with the created list.
     - Check if the function has properly set the theme list with different types of themes.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ThemeList_setThemes_87cb83ff29_Test {

    private ThemeList themeList;

    @BeforeEach
    public void setUp() {
        themeList = new ThemeList();
    }

    @Test
    public void testSetThemes() {
        Theme theme1 = new Theme();
        Theme theme2 = new Theme();
        List<Theme> themes = new ArrayList<>(Arrays.asList(theme1, theme2));

        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }

    @Test
    public void testSetThemesWithEmptyList() {
        List<Theme> themes = new ArrayList<>();

        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }

    @Test
    public void testSetThemesWithNull() {
        themeList.setThemes(null);
        assertNull(themeList.getThemes());
    }

    @Test
    public void testSetThemesWithDuplicates() {
        Theme theme1 = new Theme();
        Theme theme2 = new Theme();
        List<Theme> themes = new ArrayList<>(Arrays.asList(theme1, theme2, theme1));

        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }

    @Test
    public void testSetThemesWithLargeNumber() {
        List<Theme> themes = new ArrayList<>();
        for (int i = 0; i < 10000; i++) {
            themes.add(new Theme());
        }

        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }

    @Test
    public void testSetThemesWithSingleTheme() {
        Theme theme1 = new Theme();
        List<Theme> themes = new ArrayList<>(Arrays.asList(theme1));

        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }

    @Test
    public void testSetThemesWithDifferentTypes() {
        Theme theme1 = new Theme();
        theme1.setName("Dark");
        Theme theme2 = new Theme();
        theme2.setName("Light");
        List<Theme> themes = new ArrayList<>(Arrays.asList(theme1, theme2));

        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }
}

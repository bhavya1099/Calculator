// ********RoostGPT********
/*
Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=setBtnEqualBackground_e906aa180e
ROOST_METHOD_SIG_HASH=setBtnEqualBackground_85fbd39ea7

"""
Scenario 1: Test when valid color value is passed as argument
Details: 
  TestName: setValidColorAsBtnEqualBackground
  Description: This test scenario tests if the method sets the correct background color for the button when a valid color value is passed.
Execution: 
  Arrange: Create a new instance of the class and get the current background color value of the btnEqualBackground. 
  Act: Invoke the setBtnEqualBackground method passing the valid new color value as the argument.
  Assert: Assert that the new background color value of the btnEqualBackground is equal to the value passed and not the initial value.
Validation: 
  If the color is set correctly the test will pass, validating that the function correctly changes the background color of the button.

Scenario 2: Test when null value is passed as argument
Details: 
  TestName: setNullAsBtnEqualBackground
  Description: This test scenario tests if the method throws a Null Pointer Exception when null value is passed as argument.
Execution: 
  Arrange: Create a new instance of the class. 
  Act: Invoke the setBtnEqualBackground method passing null as the argument.
  Assert: Assert that a Null Pointer Exception is thrown.
Validation: 
  If a Null Pointer Exception is successfully thrown, the test will pass, validating that the function correctly handles null arguments.

Scenario 3: Test when an invalid color value is passed as argument
Details:
  TestName: setInvalidColorAsBtnEqualBackground
  Description: This test scenario checks whether the method correctly handles instances when an invalid color value is passed.
Execution:  
  Arrange: Create a new instance of the class and assign a valid color value to the btnEqualBackground. 
  Act: Invoke the setBtnEqualBackground method passing an invalid color value as the argument.
  Assert: Assert that the new background color value of the btnEqualBackground is still the initial valid color value.
Validation: 
  If the color value remains the initial valid color value after passing an invalid color, the test will pass, validating that the function correctly ignores the invalid color arguments.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class ThemeSetBtnEqualBackgroundTest {
    @Test
    public void setValidColorAsBtnEqualBackground() {
        Theme theme = new Theme();
        String initialColor = theme.getBtnEqualBackground();
        String newColor = "#FFFFFF";
        theme.setBtnEqualBackground(newColor);
        assertNotEquals(initialColor, theme.getBtnEqualBackground());
        assertEquals(newColor, theme.getBtnEqualBackground());
    }
    @Test
    public void setNullAsBtnEqualBackground() {
        Theme theme = new Theme();
        assertThrows(NullPointerException.class, () -> theme.setBtnEqualBackground(null));
    }
    @Test
    public void setInvalidColorAsBtnEqualBackground() {
        Theme theme = new Theme();
        String validColor = "#FFFFFF";
        theme.setBtnEqualBackground(validColor);
        theme.setBtnEqualBackground("InvalidColor");
        assertEquals(validColor, theme.getBtnEqualBackground());
    }
}
// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when the name is a non-empty string
- Given a non-empty string is set as the name
- When the `getName()` function is called
- Then it should return the given non-empty string as the name

2. Scenario: Test when the name is an empty string
- Given an empty string is set as the name
- When the `getName()` function is called
- Then it should return an empty string

3. Scenario: Test when the name is null
- Given null is set as the name
- When the `getName()` function is called
- Then it should return null as the name

4. Scenario: Test when the name contains special characters
- Given a string with special characters is set as the name
- When the `getName()` function is called
- Then it should return the string with special characters as the name

5. Scenario: Test when the name contains numeric characters
- Given a string with numeric characters is set as the name
- When the `getName()` function is called
- Then it should return the string with numeric characters as the name

6. Scenario: Test when the name contains white spaces
- Given a string with white spaces is set as the name
- When the `getName()` function is called
- Then it should return the string with white spaces as the name

7. Scenario: Test when the name is a long string
- Given a long string is set as the name
- When the `getName()` function is called
- Then it should return the long string as the name

Please note that these scenarios assume that the `getName()` function is simply returning the value of the `name` variable, and doesn't involve any complex business logic. If there is additional business logic in setting the `name`, additional test scenarios will be required to cover that logic.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_getName_8400ac6fb7_Test {

    @Test
    public void testGetName_NonEmptyString() {
        Theme theme = new Theme();
        theme.setName("TestName");
        assertEquals("TestName", theme.getName());
    }

    @Test
    public void testGetName_EmptyString() {
        Theme theme = new Theme();
        theme.setName("");
        assertEquals("", theme.getName());
    }

    @Test
    public void testGetName_Null() {
        Theme theme = new Theme();
        theme.setName(null);
        assertNull(theme.getName());
    }

    @Test
    public void testGetName_SpecialCharacters() {
        Theme theme = new Theme();
        theme.setName("@#Test$%");
        assertEquals("@#Test$%", theme.getName());
    }

    @Test
    public void testGetName_NumericCharacters() {
        Theme theme = new Theme();
        theme.setName("Test123");
        assertEquals("Test123", theme.getName());
    }

    @Test
    public void testGetName_WithSpaces() {
        Theme theme = new Theme();
        theme.setName("Test Name");
        assertEquals("Test Name", theme.getName());
    }

    @Test
    public void testGetName_LongString() {
        Theme theme = new Theme();
        theme.setName("ThisIsAVeryLongTestName");
        assertEquals("ThisIsAVeryLongTestName", theme.getName());
    }
}

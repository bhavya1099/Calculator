// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Test Scenario: Validate that the getApplicationBackground() function returns the correct application background value when it's called.
   
   Test Steps:
   - Set the application background to a known value.
   - Call the getApplicationBackground() function.
   - Check if the returned value matches the set value.

2. Test Scenario: Validate that the getApplicationBackground() function returns null when the application background has not been set.
   
   Test Steps:
   - Ensure the application background has not been set.
   - Call the getApplicationBackground() function.
   - Check if the returned value is null.

3. Test Scenario: Validate that the getApplicationBackground() function returns the latest set value of the application background.
   
   Test Steps:
   - Set the application background to a known value.
   - Change the application background to another known value.
   - Call the getApplicationBackground() function.
   - Check if the returned value matches the latest set value.

4. Test Scenario: Validate that the getApplicationBackground() function can handle concurrent requests.
   
   Test Steps:
   - Set the application background to a known value.
   - Call the getApplicationBackground() function from multiple threads simultaneously.
   - Check if all returned values match the set value.

5. Test Scenario: Validate that the getApplicationBackground() function can handle large application background values.
   
   Test Steps:
   - Set the application background to a large value.
   - Call the getApplicationBackground() function.
   - Check if the returned value matches the set value.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class Theme_getApplicationBackground_4896a9dafe_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testGetApplicationBackground_WhenValueIsSet() {
        String expectedApplicationBackground = "background1";
        theme.setApplicationBackground(expectedApplicationBackground);

        String actualApplicationBackground = theme.getApplicationBackground();

        assertEquals(expectedApplicationBackground, actualApplicationBackground);
    }

    @Test
    public void testGetApplicationBackground_WhenValueIsNotSet() {
        String actualApplicationBackground = theme.getApplicationBackground();

        assertNull(actualApplicationBackground);
    }

    @Test
    public void testGetApplicationBackground_WhenValueIsChanged() {
        String expectedApplicationBackground = "background2";
        theme.setApplicationBackground("background1");
        theme.setApplicationBackground(expectedApplicationBackground);

        String actualApplicationBackground = theme.getApplicationBackground();

        assertEquals(expectedApplicationBackground, actualApplicationBackground);
    }

    @Test
    public void testGetApplicationBackground_ConcurrentAccess() throws Exception {
        String expectedApplicationBackground = "background3";
        theme.setApplicationBackground(expectedApplicationBackground);

        ExecutorService executorService = Executors.newFixedThreadPool(3);
        Future<String> future1 = executorService.submit(theme::getApplicationBackground);
        Future<String> future2 = executorService.submit(theme::getApplicationBackground);
        Future<String> future3 = executorService.submit(theme::getApplicationBackground);

        assertEquals(expectedApplicationBackground, future1.get());
        assertEquals(expectedApplicationBackground, future2.get());
        assertEquals(expectedApplicationBackground, future3.get());
    }

    @Test
    public void testGetApplicationBackground_LargeValue() {
        String expectedApplicationBackground = "background".repeat(10000);
        theme.setApplicationBackground(expectedApplicationBackground);

        String actualApplicationBackground = theme.getApplicationBackground();

        assertEquals(expectedApplicationBackground, actualApplicationBackground);
    }
}

// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function accepts valid string input.
   Test: Provide a valid string input for the btnEqualBackground parameter and check if the function runs without any errors.

2. Scenario: Check if the function updates the btnEqualBackground value.
   Test: Provide a valid string input for the btnEqualBackground parameter and check if the btnEqualBackground value is updated.

3. Scenario: Check if the function handles null input.
   Test: Provide a null value for the btnEqualBackground parameter and check if the function handles it without throwing any errors.

4. Scenario: Check if the function handles empty string input.
   Test: Provide an empty string for the btnEqualBackground parameter and check if the function handles it without throwing any errors.

5. Scenario: Check if the function handles string input with special characters.
   Test: Provide a string with special characters for the btnEqualBackground parameter and check if the function handles it without throwing any errors.

6. Scenario: Check if the function handles string input with whitespace characters.
   Test: Provide a string with whitespace characters for the btnEqualBackground parameter and check if the function handles it without throwing any errors.

7. Scenario: Check if the function handles very long string input.
   Test: Provide a very long string for the btnEqualBackground parameter and check if the function handles it without throwing any errors.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualBackground_85fbd39ea7_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetBtnEqualBackground_ValidInput() {
        String validInput = "#FFFFFF";
        theme.setBtnEqualBackground(validInput);
        assertEquals(validInput, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_UpdateValue() {
        String initialValue = "#FFFFFF";
        String updatedValue = "#000000";
        theme.setBtnEqualBackground(initialValue);
        theme.setBtnEqualBackground(updatedValue);
        assertEquals(updatedValue, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_NullInput() {
        theme.setBtnEqualBackground(null);
        assertNull(theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_EmptyString() {
        theme.setBtnEqualBackground("");
        assertEquals("", theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_SpecialCharacters() {
        String specialInput = "@#%^&*()";
        theme.setBtnEqualBackground(specialInput);
        assertEquals(specialInput, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_WhiteSpaceCharacters() {
        String whiteSpaceInput = "    ";
        theme.setBtnEqualBackground(whiteSpaceInput);
        assertEquals(whiteSpaceInput, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_LongString() {
        String longInput = "This is a very long string input for testing purpose.";
        theme.setBtnEqualBackground(longInput);
        assertEquals(longInput, theme.getBtnEqualBackground());
    }
}

// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when a valid color code is passed as `btnEqualBackground`.
   - Given the color code "#FFFFFF" as `btnEqualBackground`.
   - When `setBtnEqualBackground` is called.
   - Then confirm that the `btnEqualBackground` is set to "#FFFFFF".

2. Scenario: Test when an invalid color code is passed as `btnEqualBackground`.
   - Given the color code "#ZZZZZZ" as `btnEqualBackground`.
   - When `setBtnEqualBackground` is called.
   - Then confirm that an appropriate error or exception is thrown.

3. Scenario: Test when `btnEqualBackground` is set to null.
   - Given null as `btnEqualBackground`.
   - When `setBtnEqualBackground` is called.
   - Then confirm that an appropriate error or exception is thrown.

4. Scenario: Test when `btnEqualBackground` is set to an empty string.
   - Given an empty string as `btnEqualBackground`.
   - When `setBtnEqualBackground` is called.
   - Then confirm that an appropriate error or exception is thrown.

5. Scenario: Test the state of `btnEqualBackground` before and after `setBtnEqualBackground` is called.
   - Given the color code "#000000" as `btnEqualBackground`.
   - Confirm that the initial state of `btnEqualBackground` is not "#000000".
   - When `setBtnEqualBackground` is called with "#000000".
   - Then confirm that the `btnEqualBackground` is set to "#000000".

6. Scenario: Test when a valid color name is passed as `btnEqualBackground`.
   - Given the color name "red" as `btnEqualBackground`.
   - When `setBtnEqualBackground` is called.
   - Then confirm that the `btnEqualBackground` is set to "red".

7. Scenario: Test when an invalid color name is passed as `btnEqualBackground`.
   - Given the color name "invalid_color" as `btnEqualBackground`.
   - When `setBtnEqualBackground` is called.
   - Then confirm that an appropriate error or exception is thrown.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualBackground_85fbd39ea7_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetBtnEqualBackground_ValidColorCode() {
        String validColor = "#FFFFFF";
        theme.setBtnEqualBackground(validColor);
        assertEquals(validColor, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_NullColorCode() {
        assertThrows(NullPointerException.class, () -> theme.setBtnEqualBackground(null));
    }

    @Test
    public void testSetBtnEqualBackground_EmptyColorCode() {
        String emptyColor = "";
        theme.setBtnEqualBackground(emptyColor);
        assertEquals(emptyColor, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_StateBeforeAndAfter() {
        String colorCode = "#000000";
        assertNotEquals(colorCode, theme.getBtnEqualBackground());
        theme.setBtnEqualBackground(colorCode);
        assertEquals(colorCode, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_ValidColorName() {
        String validColorName = "red";
        theme.setBtnEqualBackground(validColorName);
        assertEquals(validColorName, theme.getBtnEqualBackground());
    }

}

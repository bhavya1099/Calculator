// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function getThemes returns a non-null list of themes.
   Test Case: Call the getThemes function and check if the returned list is not null.

2. Scenario: Check if the function getThemes returns an empty list when there are no themes.
   Test Case: Call the getThemes function when no themes are added and check if the returned list is empty.

3. Scenario: Check if the function getThemes returns a list containing all the themes.
   Test Case: Add several themes, call the getThemes function and check if all the added themes are present in the returned list.

4. Scenario: Check if the function getThemes maintains the order of the themes.
   Test Case: Add several themes in a specific order, call the getThemes function and check if the returned list maintains the same order.

5. Scenario: Check if the function getThemes doesn't affect the original list of themes after performing operations on the returned list.
   Test Case: Call the getThemes function, perform some operations like adding or removing themes from the returned list, and then check if the original list of themes remains unaffected.

6. Scenario: Check if the function getThemes returns a list of unique themes if duplicate themes are added.
   Test Case: Add several duplicate themes, call the getThemes function and check if the returned list contains unique themes.

7. Scenario: Check if the function getThemes is thread-safe.
   Test Case: Call the getThemes function from multiple threads simultaneously and check if it behaves as expected. 

8. Scenario: Check if the function getThemes returns a list of the correct size.
   Test Case: Add several themes, call the getThemes function and check if the size of the returned list matches the number of added themes.

9. Scenario: Check if the function getThemes returns a list of the correct type.
   Test Case: Call the getThemes function and check if the returned list contains elements of the Theme type.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.Arrays;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;

public class ThemeList_getThemes_1ad0f9f985_Test {
    private ThemeList themeList;
    private Theme theme1, theme2;

    @BeforeEach
    void setUp() {
        themeList = new ThemeList();
        theme1 = new Theme();
        theme1.setName("Dark");
        theme2 = new Theme();
        theme2.setName("Light");
    }

    @Test
    void testGetThemesWhenListIsNull() {
        assertNull(themeList.getThemes());
    }

    @Test
    void testGetThemesWhenListIsEmpty() {
        themeList.setThemes(Arrays.asList());
        assertTrue(themeList.getThemes().isEmpty());
    }

    @Test
    void testGetThemesWhenListHasElements() {
        themeList.setThemes(Arrays.asList(theme1, theme2));
        List<Theme> themes = themeList.getThemes();
        assertEquals(2, themes.size());
        assertEquals("Dark", themes.get(0).getName());
        assertEquals("Light", themes.get(1).getName());
    }

    @Test
    void testGetThemesWhenListHasDuplicateElements() {
        themeList.setThemes(Arrays.asList(theme1, theme1, theme2, theme2));
        List<Theme> themes = themeList.getThemes();
        assertEquals(4, themes.size());
        assertEquals("Dark", themes.get(0).getName());
        assertEquals("Dark", themes.get(1).getName());
        assertEquals("Light", themes.get(2).getName());
        assertEquals("Light", themes.get(3).getName());
    }

    @Test
    void testGetThemesDoesNotAffectOriginalList() {
        themeList.setThemes(Arrays.asList(theme1, theme2));
        List<Theme> themes = themeList.getThemes();
        themes.remove(0);
        assertEquals(2, themeList.getThemes().size());
    }

    @Test
    void testGetThemesIsThreadSafe() throws InterruptedException {
        themeList.setThemes(Arrays.asList(theme1, theme2));

        Thread thread1 = new Thread(() -> themeList.getThemes().add(new Theme()));
        Thread thread2 = new Thread(() -> themeList.getThemes().remove(0));

        thread1.start();
        thread2.start();

        thread1.join();
        thread2.join();

        assertEquals(2, themeList.getThemes().size());
    }
}

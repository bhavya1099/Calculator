// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function returns a list of themes.
   Test Steps: Call the getThemes() function and check if the returned object is a list of themes.

2. Scenario: Check if the function returns an empty list when there are no themes.
   Test Steps: Ensure that there are no themes. Call the getThemes() function and check if the returned list is empty.

3. Scenario: Check if the function returns all available themes.
   Test Steps: Add a known number of themes. Call the getThemes() function and check if the size of the returned list matches the number of added themes.

4. Scenario: Check if the function returns the correct themes.
   Test Steps: Add specific themes. Call the getThemes() function and check if the returned list contains the added themes.

5. Scenario: Check if the function maintains the order of the themes.
   Test Steps: Add themes in a specific order. Call the getThemes() function and check if the order of the returned list matches the order of the added themes.

6. Scenario: Check if the function handles null values correctly.
   Test Steps: Add a null value to the themes. Call the getThemes() function and check if the returned list contains the null value.

7. Scenario: Check if the function handles duplicate themes correctly.
   Test Steps: Add duplicate themes. Call the getThemes() function and check if the returned list contains the duplicate themes.

8. Scenario: Check if the function is thread-safe.
   Test Steps: Call the getThemes() function simultaneously from multiple threads and check if the returned lists are correct. 

9. Scenario: Check if the function handles large amounts of themes correctly.
   Test Steps: Add a large number of themes. Call the getThemes() function and check if the returned list contains all the added themes and the size of the list is correct.

10. Scenario: Check if the function works correctly after removing themes.
    Test Steps: Add some themes, call the getThemes() function and check the returned list. Then remove some themes, call the getThemes() function again and check if the returned list is correct.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.ArrayList;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class ThemeList_getThemes_1ad0f9f985_Test {

    private ThemeList themeList;
    private Theme theme1;
    private Theme theme2;

    @BeforeEach
    public void setUp() {
        themeList = new ThemeList();
        theme1 = new Theme();
        theme1.setName("Theme1");
        theme2 = new Theme();
        theme2.setName("Theme2");
    }

    @Test
    public void testGetThemesReturnsAListOfThemes() {
        List<Theme> themes = new ArrayList<>();
        themes.add(theme1);
        themes.add(theme2);
        themeList.setThemes(themes);
        List<Theme> result = themeList.getThemes();
        assertNotNull(result);
        assertEquals(2, result.size());
    }

    @Test
    public void testGetThemesReturnsEmptyListWhenNoThemes() {
        assertTrue(themeList.getThemes().isEmpty());
    }

    @Test
    public void testGetThemesReturnsAllAvailableThemes() {
        List<Theme> themes = new ArrayList<>();
        themes.add(theme1);
        themes.add(theme2);
        themeList.setThemes(themes);
        assertEquals(themes, themeList.getThemes());
    }

    @Test
    public void testGetThemesReturnsCorrectThemes() {
        List<Theme> themes = new ArrayList<>();
        themes.add(theme1);
        themeList.setThemes(themes);
        assertTrue(themeList.getThemes().contains(theme1));
    }

    @Test
    public void testGetThemesMaintainsOrderOfThemes() {
        List<Theme> themes = new ArrayList<>();
        themes.add(theme1);
        themes.add(theme2);
        themeList.setThemes(themes);
        assertEquals("Theme1", themeList.getThemes().get(0).getName());
        assertEquals("Theme2", themeList.getThemes().get(1).getName());
    }
}

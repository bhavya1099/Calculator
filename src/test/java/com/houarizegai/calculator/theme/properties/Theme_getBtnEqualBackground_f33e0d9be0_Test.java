// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

Here are some test scenarios to validate the business logic of the function getBtnEqualBackground:

1. Scenario: Check if the function returns a non-null value.
   Given that the btnEqualBackground variable is initialized,
   When the getBtnEqualBackground function is called,
   Then it should return a non-null string.

2. Scenario: Check if the function returns the correct value.
   Given that the btnEqualBackground variable is set to a specific string value,
   When the getBtnEqualBackground function is called,
   Then it should return the same string value.

3. Scenario: Check if the function returns an empty string when the btnEqualBackground is not set.
   Given that the btnEqualBackground variable is not set,
   When the getBtnEqualBackground function is called,
   Then it should return an empty string.

4. Scenario: Check if the function returns the same value on multiple calls.
   Given that the btnEqualBackground variable is set to a specific string value,
   When the getBtnEqualBackground function is called multiple times,
   Then it should always return the same string value.

5. Scenario: Check if the function handles null values.
   Given that the btnEqualBackground variable is set to null,
   When the getBtnEqualBackground function is called,
   Then it should return null.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Theme_getBtnEqualBackground_f33e0d9be0_Test {

    private Theme theme;

    @BeforeEach
    public void setup() {
        theme = new Theme();
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsNonNullValue() {
        theme.setBtnEqualBackground("blue");
        assertNotNull(theme.getBtnEqualBackground(), "getBtnEqualBackground should not return null");
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsCorrectValue() {
        theme.setBtnEqualBackground("red");
        assertEquals("red", theme.getBtnEqualBackground(), "getBtnEqualBackground should return the correct value");
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsEmptyStringWhenNotSet() {
        theme.setBtnEqualBackground("");
        assertEquals("", theme.getBtnEqualBackground(), "getBtnEqualBackground should return an empty string when not set");
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsSameValueOnMultipleCalls() {
        theme.setBtnEqualBackground("green");
        assertEquals("green", theme.getBtnEqualBackground(), "getBtnEqualBackground should return the correct value on first call");
        assertEquals("green", theme.getBtnEqualBackground(), "getBtnEqualBackground should return the correct value on second call");
    }

    @Test
    public void testGetBtnEqualBackground_HandlesNullValues() {
        theme.setBtnEqualBackground(null);
        assertNull(theme.getBtnEqualBackground(), "getBtnEqualBackground should handle null values");
    }
}

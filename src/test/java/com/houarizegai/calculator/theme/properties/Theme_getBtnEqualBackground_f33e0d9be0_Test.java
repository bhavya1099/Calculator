// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Test Scenario: Check if the `getBtnEqualBackground()` method returns the correct value of `btnEqualBackground`. 

   Test Steps:
   - Initialize the `btnEqualBackground` with a known value.
   - Call the `getBtnEqualBackground()` method.
   - Validate that the returned value matches the initialized value of `btnEqualBackground`.

2. Test Scenario: Check if the `getBtnEqualBackground()` method returns null when `btnEqualBackground` is not initialized.

   Test Steps:
   - Do not initialize `btnEqualBackground`.
   - Call the `getBtnEqualBackground()` method.
   - Validate that the returned value is null.

3. Test Scenario: Check if the `getBtnEqualBackground()` method returns the correct value of `btnEqualBackground` when it is updated.

   Test Steps:
   - Initialize the `btnEqualBackground` with a known value.
   - Update the `btnEqualBackground` with a new value.
   - Call the `getBtnEqualBackground()` method.
   - Validate that the returned value matches the new value of `btnEqualBackground`.

4. Test Scenario: Check if the `getBtnEqualBackground()` method returns empty string when `btnEqualBackground` is initialized with an empty string.

   Test Steps:
   - Initialize the `btnEqualBackground` with an empty string.
   - Call the `getBtnEqualBackground()` method.
   - Validate that the returned value is an empty string.

5. Test Scenario: Check if the `getBtnEqualBackground()` method returns the correct value of `btnEqualBackground` when it contains special characters.

   Test Steps:
   - Initialize the `btnEqualBackground` with a string containing special characters.
   - Call the `getBtnEqualBackground()` method.
   - Validate that the returned value matches the initialized value of `btnEqualBackground`.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

public class Theme_getBtnEqualBackground_f33e0d9be0_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testGetBtnEqualBackground() {
        String expectedBackground = "#000000";
        theme.setBtnEqualBackground(expectedBackground);
        String actualBackground = theme.getBtnEqualBackground();
        assertEquals(expectedBackground, actualBackground);
    }

    @Test
    public void testGetBtnEqualBackgroundWhenNotInitialized() {
        String actualBackground = theme.getBtnEqualBackground();
        assertNull(actualBackground);
    }

    @Test
    public void testGetBtnEqualBackgroundWhenUpdated() {
        String initialBackground = "#000000";
        theme.setBtnEqualBackground(initialBackground);

        String updatedBackground = "#FFFFFF";
        theme.setBtnEqualBackground(updatedBackground);

        String actualBackground = theme.getBtnEqualBackground();
        assertEquals(updatedBackground, actualBackground);
    }

    @Test
    public void testGetBtnEqualBackgroundWhenEmpty() {
        theme.setBtnEqualBackground("");
        String actualBackground = theme.getBtnEqualBackground();
        assertEquals("", actualBackground);
    }

    @Test
    public void testGetBtnEqualBackgroundWithSpecialChars() {
        String expectedBackground = "#$%^&*()";
        theme.setBtnEqualBackground(expectedBackground);
        String actualBackground = theme.getBtnEqualBackground();
        assertEquals(expectedBackground, actualBackground);
    }
}

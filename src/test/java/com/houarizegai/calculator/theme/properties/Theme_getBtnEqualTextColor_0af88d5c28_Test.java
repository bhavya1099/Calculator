// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

Here are some test scenarios to validate the business logic of the `getBtnEqualTextColor` function:

1. **Scenario**: Verify that the method returns the correct color of the button.
   - **Test Steps**: 
     - Set the `btnEqualTextColor` with a known color.
     - Call the `getBtnEqualTextColor` method.
   - **Expected Result**: The `getBtnEqualTextColor` method should return the color set for the `btnEqualTextColor`.

2. **Scenario**: Verify that the method returns null if the `btnEqualTextColor` is not set.
   - **Test Steps**: 
     - Do not set a value for `btnEqualTextColor`.
     - Call the `getBtnEqualTextColor` method.
   - **Expected Result**: The `getBtnEqualTextColor` method should return `null`.

3. **Scenario**: Verify that the method returns the correct color in different cases (upper case, lower case, mixed case).
   - **Test Steps**: 
     - Set the `btnEqualTextColor` with a known color in different cases.
     - Call the `getBtnEqualTextColor` method.
   - **Expected Result**: The `getBtnEqualTextColor` method should return the color in the same case as it was set.

4. **Scenario**: Verify that the method returns the correct color even after changing the `btnEqualTextColor` value multiple times.
   - **Test Steps**: 
     - Set the `btnEqualTextColor` with a known color.
     - Change the `btnEqualTextColor` to a different color.
     - Call the `getBtnEqualTextColor` method.
   - **Expected Result**: The `getBtnEqualTextColor` method should return the latest color set for the `btnEqualTextColor`.

5. **Scenario**: Verify that the method handles the empty string correctly.
   - **Test Steps**: 
     - Set the `btnEqualTextColor` as an empty string.
     - Call the `getBtnEqualTextColor` method.
   - **Expected Result**: The `getBtnEqualTextColor` method should return an empty string.

Please note that these test scenarios are based on assumptions about the behaviour of the `getBtnEqualTextColor` method, as the provided code snippet does not provide enough context about the overall functionality and use of the `btnEqualTextColor`.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Theme_getBtnEqualTextColor_0af88d5c28_Test {

    private Theme theme;

    @BeforeEach
    void setUp() {
        theme = new Theme();
    }

    @Test
    void testGetBtnEqualTextColorShouldReturnCorrectColor() {
        String color = "#FFFFFF";
        theme.setBtnEqualTextColor(color);
        assertEquals(color, theme.getBtnEqualTextColor());
    }

    @Test
    void testGetBtnEqualTextColorShouldReturnNullIfNotSet() {
        assertNull(theme.getBtnEqualTextColor());
    }

    @Test
    void testGetBtnEqualTextColorShouldReturnCorrectColorInDifferentCases() {
        String color = "#FfFfFf";
        theme.setBtnEqualTextColor(color);
        assertEquals(color, theme.getBtnEqualTextColor());
    }

    @Test
    void testGetBtnEqualTextColorShouldReturnCorrectColorAfterChangingMultipleTimes() {
        String color1 = "#FFFFFF";
        String color2 = "#000000";
        theme.setBtnEqualTextColor(color1);
        theme.setBtnEqualTextColor(color2);
        assertEquals(color2, theme.getBtnEqualTextColor());
    }

    @Test
    void testGetBtnEqualTextColorShouldReturnEmptyStringIfSetAsEmpty() {
        String color = "";
        theme.setBtnEqualTextColor(color);
        assertEquals(color, theme.getBtnEqualTextColor());
    }
}

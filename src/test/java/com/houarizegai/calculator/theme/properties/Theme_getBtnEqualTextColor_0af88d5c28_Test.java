// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

Here are some test scenarios to validate the business logic of the function getBtnEqualTextColor:

1. Scenario: Check if the function returns a non-null value.
   Given that the btnEqualTextColor variable is initialized,
   When the getBtnEqualTextColor function is called,
   Then it should return a non-null string.

2. Scenario: Check if the function returns an empty string.
   Given that the btnEqualTextColor variable is initialized as an empty string,
   When the getBtnEqualTextColor function is called,
   Then it should return an empty string.

3. Scenario: Check if the function returns the correct value.
   Given that the btnEqualTextColor variable is initialized with a specific color code,
   When the getBtnEqualTextColor function is called,
   Then it should return the same color code.

4. Scenario: Check if the function returns a valid color code.
   Given that the btnEqualTextColor variable is initialized with a valid color code,
   When the getBtnEqualTextColor function is called,
   Then it should return a valid color code.

5. Scenario: Check if the function returns the default value.
   Given that the btnEqualTextColor variable is not initialized,
   When the getBtnEqualTextColor function is called,
   Then it should return the default color code.

Please note that these scenarios are based on assumptions about the btnEqualTextColor variable, as the provided code snippet does not provide enough context.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Theme_getBtnEqualTextColor_0af88d5c28_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testGetBtnEqualTextColor_nonNullValue() {
        theme.setBtnEqualTextColor("#FFFFFF");
        assertNotNull(theme.getBtnEqualTextColor());
    }

    @Test
    public void testGetBtnEqualTextColor_emptyString() {
        theme.setBtnEqualTextColor("");
        assertEquals("", theme.getBtnEqualTextColor());
    }

    @Test
    public void testGetBtnEqualTextColor_correctValue() {
        theme.setBtnEqualTextColor("#000000");
        assertEquals("#000000", theme.getBtnEqualTextColor());
    }

    @Test
    public void testGetBtnEqualTextColor_validColorCode() {
        theme.setBtnEqualTextColor("#FF5733");
        assertTrue(theme.getBtnEqualTextColor().matches("^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"));
    }

    // Assuming that the default value is null
    @Test
    public void testGetBtnEqualTextColor_defaultValue() {
        assertNull(theme.getBtnEqualTextColor());
    }
}

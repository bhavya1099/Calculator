// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function accepts valid color codes.
   Test Data: "#FFFFFF"
   Expected Result: The function should accept the color code and set "btnEqualTextColor" to "#FFFFFF".

2. Scenario: Check if the function accepts valid color names.
   Test Data: "Red"
   Expected Result: The function should accept the color name and set "btnEqualTextColor" to "Red".

3. Scenario: Check if the function handles invalid color codes.
   Test Data: "#ZZZZZZ"
   Expected Result: The function should throw an error or not change the "btnEqualTextColor" value.

4. Scenario: Check if the function handles invalid color names.
   Test Data: "InvalidColor"
   Expected Result: The function should throw an error or not change the "btnEqualTextColor" value.

5. Scenario: Check if the function handles null value.
   Test Data: null
   Expected Result: The function should throw an error or not change the "btnEqualTextColor" value.

6. Scenario: Check if the function handles empty string.
   Test Data: ""
   Expected Result: The function should throw an error or not change the "btnEqualTextColor" value.

7. Scenario: Check if the function handles very long string.
   Test Data: "VeryLongString..."
   Expected Result: The function should throw an error or not change the "btnEqualTextColor" value.

8. Scenario: Check if the function handles color names in different cases.
   Test Data: "RED", "red", "Red"
   Expected Result: The function should accept the color names in different cases and set "btnEqualTextColor" to the corresponding color.

9. Scenario: Check if the function handles color codes in different cases.
   Test Data: "#ffffff", "#FFFFFF", "#FfFfFf"
   Expected Result: The function should accept the color codes in different cases and set "btnEqualTextColor" to the corresponding color.

10. Scenario: Check if the function handles color codes without '#'.
    Test Data: "FFFFFF"
    Expected Result: The function should accept the color code without '#' and set "btnEqualTextColor" to the corresponding color.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class Theme_setBtnEqualTextColor_dea3d0f34c_Test {
    private Theme theme;

    @BeforeEach
    void setUp() {
        theme = new Theme();
    }

    @Test
    void testSetBtnEqualTextColorWithValidColorCode() {
        theme.setBtnEqualTextColor("#FFFFFF");
        assertEquals("#FFFFFF", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithValidColorName() {
        theme.setBtnEqualTextColor("Red");
        assertEquals("Red", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithInvalidColorCode() {
        theme.setBtnEqualTextColor("#ZZZZZZ");
        assertNotEquals("#ZZZZZZ", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithInvalidColorName() {
        theme.setBtnEqualTextColor("InvalidColor");
        assertNotEquals("InvalidColor", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithNull() {
        theme.setBtnEqualTextColor(null);
        assertNotEquals(null, theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithEmptyString() {
        theme.setBtnEqualTextColor("");
        assertNotEquals("", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithLongString() {
        theme.setBtnEqualTextColor("VeryLongString...");
        assertNotEquals("VeryLongString...", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithDifferentCases() {
        theme.setBtnEqualTextColor("RED");
        assertEquals("RED", theme.getBtnEqualTextColor());

        theme.setBtnEqualTextColor("red");
        assertEquals("red", theme.getBtnEqualTextColor());

        theme.setBtnEqualTextColor("Red");
        assertEquals("Red", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithDifferentCasesColorCodes() {
        theme.setBtnEqualTextColor("#ffffff");
        assertEquals("#ffffff", theme.getBtnEqualTextColor());

        theme.setBtnEqualTextColor("#FFFFFF");
        assertEquals("#FFFFFF", theme.getBtnEqualTextColor());

        theme.setBtnEqualTextColor("#FfFfFf");
        assertEquals("#FfFfFf", theme.getBtnEqualTextColor());
    }

    @Test
    void testSetBtnEqualTextColorWithColorCodeWithoutHash() {
        theme.setBtnEqualTextColor("FFFFFF");
        assertEquals("FFFFFF", theme.getBtnEqualTextColor());
    }
}

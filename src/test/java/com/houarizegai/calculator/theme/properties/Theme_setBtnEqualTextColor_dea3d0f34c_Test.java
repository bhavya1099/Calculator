// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function accepts valid color codes.
   Test Data: "#FFFFFF"
   Expected Result: The function should accept the color code and set "btnEqualTextColor" to "#FFFFFF".

2. Scenario: Check if the function accepts empty strings.
   Test Data: ""
   Expected Result: The function should accept the empty string and set "btnEqualTextColor" to an empty string.

3. Scenario: Check if the function accepts null values.
   Test Data: null
   Expected Result: The function should accept the null value and set "btnEqualTextColor" to null.

4. Scenario: Check if the function accepts non-color code strings.
   Test Data: "Hello World"
   Expected Result: The function should accept the string and set "btnEqualTextColor" to "Hello World".

5. Scenario: Check if the function accepts color codes without a hash.
   Test Data: "FFFFFF"
   Expected Result: The function should accept the color code and set "btnEqualTextColor" to "FFFFFF".

6. Scenario: Check if the function accepts color names.
   Test Data: "Red"
   Expected Result: The function should accept the color name and set "btnEqualTextColor" to "Red".

7. Scenario: Check if the function handles case sensitivity correctly.
   Test Data: "red"
   Expected Result: The function should accept the color name and set "btnEqualTextColor" to "red".

8. Scenario: Check if the function accepts color codes in shorthand form.
   Test Data: "#FFF"
   Expected Result: The function should accept the shorthand color code and set "btnEqualTextColor" to "#FFF".

9. Scenario: Check if the function accepts RGB color codes.
   Test Data: "rgb(255,255,255)"
   Expected Result: The function should accept the RGB color code and set "btnEqualTextColor" to "rgb(255,255,255)".

10. Scenario: Check if the function accepts RGBA color codes.
    Test Data: "rgba(255,255,255,1)"
    Expected Result: The function should accept the RGBA color code and set "btnEqualTextColor" to "rgba(255,255,255,1)".
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualTextColor_dea3d0f34c_Test {
    private Theme theme;

    @BeforeEach
    public void init() {
        theme = new Theme();
    }

    @AfterEach
    public void tearDown() {
        theme = null;
    }

    @Test
    public void testSetBtnEqualTextColor_ValidColorCode() {
        theme.setBtnEqualTextColor("#FFFFFF");
        assertEquals("#FFFFFF", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_EmptyString() {
        theme.setBtnEqualTextColor("");
        assertEquals("", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_NullValue() {
        theme.setBtnEqualTextColor(null);
        assertNull(theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_NonColorCodeString() {
        theme.setBtnEqualTextColor("Hello World");
        assertEquals("Hello World", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_ColorCodeWithoutHash() {
        theme.setBtnEqualTextColor("FFFFFF");
        assertEquals("FFFFFF", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_ColorName() {
        theme.setBtnEqualTextColor("Red");
        assertEquals("Red", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_CaseSensitivity() {
        theme.setBtnEqualTextColor("red");
        assertEquals("red", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_ShortHandColorCode() {
        theme.setBtnEqualTextColor("#FFF");
        assertEquals("#FFF", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_RGBColorCode() {
        theme.setBtnEqualTextColor("rgb(255,255,255)");
        assertEquals("rgb(255,255,255)", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_RGBAColorCode() {
        theme.setBtnEqualTextColor("rgba(255,255,255,1)");
        assertEquals("rgba(255,255,255,1)", theme.getBtnEqualTextColor());
    }
}

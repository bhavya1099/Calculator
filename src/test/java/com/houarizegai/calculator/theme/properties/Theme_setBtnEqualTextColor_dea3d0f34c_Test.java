// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when a valid color code is passed as an argument.
   - Given a valid color code as a string.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the given color code.

2. Scenario: Test when an empty string is passed as an argument.
   - Given an empty string.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

3. Scenario: Test when a null value is passed as an argument.
   - Given a null value.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

4. Scenario: Test when a string with invalid color code is passed as an argument.
   - Given a string with invalid color code.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

5. Scenario: Test when a color code in different case (upper/lower) is passed as an argument.
   - Given a valid color code in different case.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the given color code.

6. Scenario: Test when a non-color string is passed as an argument.
   - Given a non-color string.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

Please note that the exact behavior for some of these scenarios would depend on the implementation of the method and how it handles various edge cases.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualTextColor_dea3d0f34c_Test {
    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetBtnEqualTextColor_validColor() {
        String validColor = "#FF5733";
        theme.setBtnEqualTextColor(validColor);
        assertEquals(validColor, theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_emptyString() {
        theme.setBtnEqualTextColor("");
        assertEquals("", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_nullValue() {
        theme.setBtnEqualTextColor(null);
        assertNull(theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_invalidColor() {
        theme.setBtnEqualTextColor("invalidColor");
        assertEquals("invalidColor", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_differentCase() {
        String color = "#ff5733";
        theme.setBtnEqualTextColor(color);
        assertEquals(color, theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_nonColorString() {
        theme.setBtnEqualTextColor("nonColorString");
        assertEquals("nonColorString", theme.getBtnEqualTextColor());
    }
}

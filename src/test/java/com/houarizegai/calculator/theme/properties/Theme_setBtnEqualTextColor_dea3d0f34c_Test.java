// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function accepts valid color codes.
   Test Data: "#FFFFFF"
   Expected Result: The function should accept the color code and set "btnEqualTextColor" to "#FFFFFF".

2. Scenario: Check if the function accepts color names.
   Test Data: "red"
   Expected Result: The function should accept the color name and set "btnEqualTextColor" to "red".

3. Scenario: Check if the function accepts invalid color codes.
   Test Data: "#GGGGGG"
   Expected Result: The function should not accept the invalid color code and throw an appropriate error.

4. Scenario: Check if the function accepts null.
   Test Data: null
   Expected Result: The function should throw an appropriate error if null is passed.

5. Scenario: Check if the function accepts an empty string.
   Test Data: ""
   Expected Result: The function should throw an appropriate error if an empty string is passed.

6. Scenario: Check if the function accepts color codes without the '#' symbol.
   Test Data: "FFFFFF"
   Expected Result: The function should not accept the color code without the '#' symbol and throw an appropriate error.

7. Scenario: Check if the function accepts color codes with more or less than six characters after the '#' symbol.
   Test Data: "#FFFFF", "#FFFFFFF"
   Expected Result: The function should not accept these color codes and throw an appropriate error.

8. Scenario: Check if the function accepts color names with spaces.
   Test Data: "light blue"
   Expected Result: The function should accept the color name with space and set "btnEqualTextColor" to "light blue".

9. Scenario: Check if the function accepts color names in uppercase.
   Test Data: "RED"
   Expected Result: The function should accept the uppercase color name and set "btnEqualTextColor" to "RED".

10. Scenario: Check if the function accepts color names in mixed case.
    Test Data: "ReD"
    Expected Result: The function should accept the mixed case color name and set "btnEqualTextColor" to "ReD".
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualTextColor_dea3d0f34c_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetBtnEqualTextColor_ValidColorCode() {
        theme.setBtnEqualTextColor("#FFFFFF");
        assertEquals("#FFFFFF", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_ColorName() {
        theme.setBtnEqualTextColor("red");
        assertEquals("red", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_InvalidColorCode() {
        assertThrows(IllegalArgumentException.class, () -> theme.setBtnEqualTextColor("#GGGGGG"));
    }

    @Test
    public void testSetBtnEqualTextColor_Null() {
        assertThrows(NullPointerException.class, () -> theme.setBtnEqualTextColor(null));
    }

    @Test
    public void testSetBtnEqualTextColor_EmptyString() {
        assertThrows(IllegalArgumentException.class, () -> theme.setBtnEqualTextColor(""));
    }

    @Test
    public void testSetBtnEqualTextColor_ColorCodeWithoutHash() {
        assertThrows(IllegalArgumentException.class, () -> theme.setBtnEqualTextColor("FFFFFF"));
    }

    @Test
    public void testSetBtnEqualTextColor_InvalidLengthColorCode() {
        assertThrows(IllegalArgumentException.class, () -> theme.setBtnEqualTextColor("#FFFFF"));
        assertThrows(IllegalArgumentException.class, () -> theme.setBtnEqualTextColor("#FFFFFFF"));
    }

    @Test
    public void testSetBtnEqualTextColor_ColorNameWithSpace() {
        theme.setBtnEqualTextColor("light blue");
        assertEquals("light blue", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_UpperCaseColorName() {
        theme.setBtnEqualTextColor("RED");
        assertEquals("RED", theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_MixedCaseColorName() {
        theme.setBtnEqualTextColor("ReD");
        assertEquals("ReD", theme.getBtnEqualTextColor());
    }
}

// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Validate that the function setNumbersBackground accepts a string as an input
   Test Steps:
   - Call the function setNumbersBackground with a string input
   - Check if the function accepts the input without throwing any error

2. Scenario: Validate that the function setNumbersBackground sets the value of numbersBackground
   Test Steps:
   - Call the function setNumbersBackground with a string input
   - Get the value of numbersBackground
   - Check if the value of numbersBackground is equal to the input string

3. Scenario: Validate that the function setNumbersBackground overwrites the existing value of numbersBackground
   Test Steps:
   - Set a value for numbersBackground
   - Call the function setNumbersBackground with a new string input
   - Get the value of numbersBackground
   - Check if the value of numbersBackground is equal to the new input string, and not the initial set value

4. Scenario: Validate that the function setNumbersBackground handles null input
   Test Steps:
   - Call the function setNumbersBackground with a null input
   - Get the value of numbersBackground
   - Check if the value of numbersBackground is null

5. Scenario: Validate that the function setNumbersBackground handles empty string input
   Test Steps:
   - Call the function setNumbersBackground with an empty string input
   - Get the value of numbersBackground
   - Check if the value of numbersBackground is an empty string

6. Scenario: Validate that the function setNumbersBackground handles large string input
   Test Steps:
   - Call the function setNumbersBackground with a large string input
   - Get the value of numbersBackground
   - Check if the value of numbersBackground is equal to the large string input
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_setNumbersBackground_17ca94580b_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetNumbersBackground_ValidString() {
        String expectedBackground = "#FFFFFF";
        theme.setNumbersBackground(expectedBackground);
        String actualBackground = theme.getNumbersBackground();
        assertEquals(expectedBackground, actualBackground, "Failed to set valid numbers background color");
    }

    @Test
    public void testSetNumbersBackground_OverwriteExistingValue() {
        String initialValue = "#000000";
        theme.setNumbersBackground(initialValue);
        String newValue = "#FFFFFF";
        theme.setNumbersBackground(newValue);
        String actualBackground = theme.getNumbersBackground();
        assertEquals(newValue, actualBackground, "Failed to overwrite existing numbers background color");
    }

    @Test
    public void testSetNumbersBackground_NullInput() {
        theme.setNumbersBackground(null);
        String actualBackground = theme.getNumbersBackground();
        assertNull(actualBackground, "Failed to handle null input for numbers background color");
    }

    @Test
    public void testSetNumbersBackground_EmptyString() {
        theme.setNumbersBackground("");
        String actualBackground = theme.getNumbersBackground();
        assertEquals("", actualBackground, "Failed to handle empty string input for numbers background color");
    }

    @Test
    public void testSetNumbersBackground_LargeStringInput() {
        String largeInput = new String(new char[10000]).replace('\0', 'a');
        theme.setNumbersBackground(largeInput);
        String actualBackground = theme.getNumbersBackground();
        assertEquals(largeInput, actualBackground, "Failed to handle large string input for numbers background color");
    }
}

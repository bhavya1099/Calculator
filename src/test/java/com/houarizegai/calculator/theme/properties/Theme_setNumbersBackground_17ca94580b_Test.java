// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Validate that the function setNumbersBackground accepts a string as an input
   Test Steps:
   - Call the function setNumbersBackground with a string input
   - Check if the function accepts the input without throwing any error

2. Scenario: Validate that the function setNumbersBackground sets the value of numbersBackground
   Test Steps:
   - Call the function setNumbersBackground with a string input
   - Check if the new value of numbersBackground is equal to the input string

3. Scenario: Validate that the function setNumbersBackground can handle null input
   Test Steps:
   - Call the function setNumbersBackground with a null input
   - Check if the function can handle the null input without throwing any error

4. Scenario: Validate that the function setNumbersBackground can handle empty string input
   Test Steps:
   - Call the function setNumbersBackground with an empty string input
   - Check if the function can handle the empty string input without throwing any error

5. Scenario: Validate that the function setNumbersBackground can handle string with special characters input
   Test Steps:
   - Call the function setNumbersBackground with a string containing special characters as input
   - Check if the function can handle the special characters input without throwing any error

6. Scenario: Validate that the function setNumbersBackground can handle long string input
   Test Steps:
   - Call the function setNumbersBackground with a long string as input
   - Check if the function can handle the long string input without throwing any error

7. Scenario: Validate that the function setNumbersBackground can handle string with spaces input
   Test Steps:
   - Call the function setNumbersBackground with a string containing spaces as input
   - Check if the function can handle the string with spaces input without throwing any error.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

public class Theme_setNumbersBackground_17ca94580b_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetNumbersBackground_ValidStringInput() {
        String input = "Background1";
        theme.setNumbersBackground(input);
        assertEquals(input, theme.getNumbersBackground());
    }

    @Test
    public void testSetNumbersBackground_NullInput() {
        theme.setNumbersBackground(null);
        assertNull(theme.getNumbersBackground());
    }

    @Test
    public void testSetNumbersBackground_EmptyStringInput() {
        String input = "";
        theme.setNumbersBackground(input);
        assertEquals(input, theme.getNumbersBackground());
    }

    @Test
    public void testSetNumbersBackground_SpecialCharactersInput() {
        String input = "@#Background$%^";
        theme.setNumbersBackground(input);
        assertEquals(input, theme.getNumbersBackground());
    }

    @Test
    public void testSetNumbersBackground_LongStringInput() {
        String input = "LongStringInputLongStringInputLongStringInputLongStringInputLongStringInput";
        theme.setNumbersBackground(input);
        assertEquals(input, theme.getNumbersBackground());
    }

    @Test
    public void testSetNumbersBackground_StringWithSpacesInput() {
        String input = "Background with spaces";
        theme.setNumbersBackground(input);
        assertEquals(input, theme.getNumbersBackground());
    }
}

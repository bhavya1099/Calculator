# ********RoostGPT********

# Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=e027123530
# ROOST_METHOD_SIG_HASH=24c692fb0c
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Verify time series order',
#     steps: 'Given I have retrieved the daily time series data for AAPL stock\n' +
#       'Then the dates should be in descending order\n' +
#       'And the most recent date should not be in the future',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 1
      arrivalRate: 1
  payload:
    path: "{{ROOST_CSV_FILE_NAME}}"
    fields:
      - "symbol"
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: Verify time series order for AAPL stock
    flow:
      - get:
          url: "/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol={{ symbol }}&apikey=demo"
          capture:
            - json: "$.['Time Series (Daily)']"
              as: "timeSeries"
          expect:
            - statusCode: 200
            - hasProperty: "Time Series (Daily)"
      - function: "validateTimeSeriesOrder"
        params:
          timeSeries: "{{ timeSeries }}"

functions:
  validateTimeSeriesOrder:
    - function: >
        (params) => {
          const timeSeries = params.timeSeries;
          const dates = Object.keys(timeSeries);
          
          // Check if dates are in descending order
          for (let i = 1; i < dates.length; i++) {
            if (dates[i] > dates[i-1]) {
              console.error('Dates are not in descending order');
              return false;
            }
          }
          
          // Check if the most recent date is not in the future
          const mostRecentDate = new Date(dates[0]);
          const currentDate = new Date();
          if (mostRecentDate > currentDate) {
            console.error('Most recent date is in the future');
            return false;
          }
          
          return true;
        }

# ********RoostGPT********

# Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=7f27d0f027
# ROOST_METHOD_SIG_HASH=d5853d6df0
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Test API from Alphavantage.co',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Verify specific date data in time series',
#     steps: 'Given I have retrieved the daily time series data for AAPL stock\n' +
#       'When I check the data for "2024-07-09"\n' +
#       'Then it should have the following values:\n' +
#       '      | Field     | Value     |\n' +
#       '      | 1. open   | 227.9300  |\n' +
#       '      | 2. high   | 229.4000  |\n' +
#       '      | 3. low    | 226.3721  |\n' +
#       '      | 4. close  | 228.6800  |\n' +
#       '      | 5. volume | 48169822  |',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 1
      arrivalRate: 1
  payload:
    path: "{{ROOST_CSV_FILE_NAME}}"
    fields:
      - date
      - open
      - high
      - low
      - close
      - volume
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: Verify specific date data in time series
    flow:
      - get:
          url: "/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=AAPL&apikey=demo"
          capture:
            - json: "$.['Time Series (Daily)']['{{ date }}']['1. open']"
              as: "actualOpen"
            - json: "$.['Time Series (Daily)']['{{ date }}']['2. high']"
              as: "actualHigh"
            - json: "$.['Time Series (Daily)']['{{ date }}']['3. low']"
              as: "actualLow"
            - json: "$.['Time Series (Daily)']['{{ date }}']['4. close']"
              as: "actualClose"
            - json: "$.['Time Series (Daily)']['{{ date }}']['5. volume']"
              as: "actualVolume"
      - think: 1
      - log: "Checking data for date: {{ date }}"
      - assert:
          - equals:
              - "{{ actualOpen }}"
              - "{{ open }}"
          - equals:
              - "{{ actualHigh }}"
              - "{{ high }}"
          - equals:
              - "{{ actualLow }}"
              - "{{ low }}"
          - equals:
              - "{{ actualClose }}"
              - "{{ close }}"
          - equals:
              - "{{ actualVolume }}"
              - "{{ volume }}"
      - log: "All assertions passed for date: {{ date }}"

# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /listener/configurationResultEvent_post for http method type POST in artillery framework
# RoostTestHash=51f5770c5e
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  environments:
    staging:
      target: "https://staging-api.example.com"
    production:
      target: "https://api.example.com"
  payload:
    path: "listener_configurationResultEvent_post_success.csv"
    fields:
      - "subscriberId"
      - "actionType"
      - "frequencyBand"
      - "wifiWPAKey"
      - "wifiIndex"
      - "SSID"
      - "passwd"
      - "broadcastSSID"
      - "wifiChannel"
      - "mode"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Validate successful API responses for configuration events"
    flow:
      - log: "Starting POST request to /listener/configurationResultEvent"
      - post:
          url: "/listener/configurationResultEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              date: "2021-11-25T18:31:06.857-03:00"
              configuration:
                id: "1a1befab-e705-41af-828b-d171573c9718"
                type: "{{ actionType }}"
                startDate: "2021-11-25T19:31:06-02"
                endDate: "2021-11-25T19:31:06-02"
                state: "INTERNAL_FAULT"
                diagnostic:
                  code: "NOK"
                  messages: ""
          expect:
            - statusCode: 204
            - hasProperty: "notification.configuration.state"
            - equals: 
                path: "notification.configuration.state"
                value: "INTERNAL_FAULT"
      - think: 1
      - log: "Starting GET request to /listener/configurationResultEvent with parameters"
      - get:
          url: "/listener/configurationResultEvent?subscriberId={{ subscriberId }}&type={{ actionType }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "notification"
      - think: 1

# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /listener/configurationResultEvent_post for http method type POST in artillery framework
# RoostTestHash=51f5770c5e
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "listener_configurationResultEvent_post_success.csv"
    skipHeader: true
    fields:
      - "subscriberId"
      - "type"
      - "frequencyBand"
      - "wifiWPAKey"
      - "wifiIndex"
      - "SSID"
      - "passwd"
      - "broadcastSSID"
      - "wifiChannel"
      - "mode"
    delimiter: "^|^"
  environments:
    staging:
      target: "https://api.staging.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Validate successful notification configuration responses"
    flow:
      - log: "Starting test scenario for posting successful notification configurations"
      - post:
          url: "/listener/configurationResultEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              configuration:
                type: "{{ type }}"
                parameters:
                  frequencyBand: "{{ frequencyBand }}"
                  wifiWPAKey: "{{ wifiWPAKey }}"
                  wifiIndex: "{{ wifiIndex }}"
                  SSID: "{{ SSID }}"
                  passwd: "{{ passwd }}"
                  broadcastSSID: "{{ broadcastSSID }}"
                  wifiChannel: "{{ wifiChannel }}"
                  mode: "{{ mode }}"
          expect:
            - statusCode: 204
            - hasProperty: "notification"
            - hasProperty: "configuration"
            - hasProperty: "parameters"
      - log: "Sent POST request with valid configuration data for creating notification"
      - think: 1

      - log: "Starting GET request to fetch notification configuration"
      - get:
          url: "/listener/configurationResultEvent?subscriberId={{ subscriberId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "notification"
            - hasProperty: "configuration"
      - log: "Sent GET request to retrieve notification configuration details"
      - think: 1

      - log: "Validating the update notification configuration"
      - put:
          url: "/listener/configurationResultEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              configuration:
                type: "{{ type }}"
                parameters:
                  frequencyBand: "{{ frequencyBand }}"
                  wifiWPAKey: "{{ wifiWPAKey }}"
                  wifiIndex: "{{ wifiIndex }}"
                  SSID: "{{ SSID }}"
                  passwd: "{{ passwd }}"
                  broadcastSSID: "{{ broadcastSSID }}"
                  wifiChannel: "{{ wifiChannel }}"
                  mode: "{{ mode }}"
          expect:
            - statusCode: 204
            - hasProperty: "notification"
            - hasProperty: "configuration"
            - hasProperty: "parameters"
      - log: "Sent PUT request to update notification configuration"
      - think: 1

# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Test generated for /kafka/v3/clusters/{cluster_id}/topics_post for http method type POST in artillery framework
# RoostTestHash=783e9d2ab5
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.yuio_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "kafka_v3_clusters_cluster_id_topics_post_success.csv"
    fields:
      - "topic_name"
      - "partitions_count"
      - "replication_factor"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Create Kafka Topic Successfully"
    flow:
      - log: "Starting scenario to create Kafka Topic"
      
      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.yuio_AUTH_TOKEN }}"
          capture:
            json: "$.cluster_id"
            as: "created_cluster_id"
      
      - expect:
          - statusCode: 201

      - think: 3
      
      - log: "Topic creation request sent successfully. Validating response."
      
      - get:
          url: "/kafka/v3/clusters/{{ created_cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.yuio_AUTH_TOKEN }}"
      
      - expect:
          - statusCode: 200
          - hasProperty: "cluster_id"
          - hasProperty: "topic_name"
          - hasProperty: "is_internal"
          - hasProperty: "replication_factor"
          - hasProperty: "partitions_count"

      - think: 5

      - log: "Successfully validated the topic details."

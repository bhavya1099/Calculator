# ********RoostGPT********

# Test generated by RoostGPT for test java-customannotation-test using AI Type  and AI Model 
# 
# Test generated for /kafka/v3/clusters/{cluster_id}/topics_get for http method type GET in artillery framework
# RoostTestHash=5a89adf6e3
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "kafka_v3_clusters_cluster_id_topics_get_success.csv"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Validate successful retrieval of Kafka topics"
    flow:
      - log: "Starting GET request to retrieve Kafka topics"
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 200
            - hasProperty: "kind"
            - hasProperty: "metadata"
            - hasProperty: "data"
            - contentType: "application/json"
      - think: 1
      - log: "Starting POST request to create a new Kafka topic"
      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
            Content-Type: "application/json"
          json:
            cluster_id: "{{ cluster_id }}"
            topic_name: "{{ topic_name }}"
            is_internal: false
            replication_factor: 3
            partitions_count: 1
          expect:
            - statusCode: 201
            - hasProperty: "cluster_id"
            - hasProperty: "topic_name"
            - hasProperty: "is_internal"
            - hasProperty: "replication_factor"
            - hasProperty: "partitions_count"
            - contentType: "application/json"
      - think: 1
      - log: "Starting PATCH request to update Kafka topic configuration"
      - patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
            Content-Type: "application/json"
          json:
            replication_factor: 5
          expect:
            - statusCode: 200
            - hasProperty: "cluster_id"
            - hasProperty: "topic_name"
            - hasProperty: "replication_factor"
            - contentType: "application/json"
      - think: 1
      - log: "Starting DELETE request to remove a Kafka topic"
      - delete:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 204
      - think: 1

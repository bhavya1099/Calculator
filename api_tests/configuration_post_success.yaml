# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /configuration_post for http method type POST in artillery framework
# RoostTestHash=f72d56dc59
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "configuration_post_success.csv"
    fields:
      - "subscriberId"
      - "type"
      - "frequencyBand"
      - "wifiIndex"
      - "passwd"
      - "mode"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Configuration Service Test Scenario"
    flow:
      - log: "Starting configuration service test for WiFi enable"
      - post:
          url: "/configuration"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            configuration:
              action:
                type: "{{ type }}"
                parameters:
                  frequencyBand: "{{ frequencyBand }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 200
            - hasProperty: "control.type"
            - hasProperty: "control.message"
            - hasProperty: "control.code"
            - hasProperty: "configuration.id"
          capture:
            json: "$.configuration.id"
            as: "configId"
      - think: 1

      - log: "Starting configuration service test for WiFi disable"
      - post:
          url: "/configuration"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            configuration:
              action:
                type: "{{ type }}"
                parameters:
                  frequencyBand: "{{ frequencyBand }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 200
            - hasProperty: "control.type"
            - hasProperty: "control.message"
            - hasProperty: "control.code"
            - hasProperty: "configuration.id"
      - think: 1

      - log: "Starting configuration service test for setting WiFi password"
      - post:
          url: "/configuration"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            configuration:
              action:
                type: "{{ type }}"
                parameters:
                  wifiIndex: "{{ wifiIndex }}"
                  passwd: "{{ passwd }}"
                  mode: "{{ mode }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 200
            - hasProperty: "control.type"
            - hasProperty: "control.message"
            - hasProperty: "control.code"
            - hasProperty: "configuration.id"
      - think: 1
